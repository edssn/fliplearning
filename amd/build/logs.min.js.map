{"version":3,"sources":["../src/logs.js"],"names":["define","Vue","Vuetify","Axios","Sortable","Draggable","Datepicker","Moment","Alertify","PageHeader","init","content","console","log","use","component","delimiters","el","vuetify","data","strings","courseid","userid","timezone","loading","errors","dates","dates_labels","loading_btn_fliplearning_logs","loading_btn_moodle_logs","mounted","document","querySelector","style","display","computed","dateRangeText","dates_array","map","date","Date","sort","sort_dates","format_date","join","methods","get_help_content","contents","title","section_help_title","description","section_help_description","a","b","getTime","year","getUTCFullYear","month_number","getUTCMonth","month","day_number","getUTCDate","day","get_timezone","information","change_timezone"],"mappings":"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","sourcesContent":["define([\"local_fliplearning/vue\",\r\n        \"local_fliplearning/vuetify\",\r\n        \"local_fliplearning/axios\",\r\n        \"local_fliplearning/sortablejs\",\r\n        \"local_fliplearning/draggable\",\r\n        \"local_fliplearning/datepicker\",\r\n        \"local_fliplearning/moment\",\r\n        \"local_fliplearning/alertify\",\r\n        \"local_fliplearning/pageheader\",\r\n    ],\r\n    function(Vue, Vuetify, Axios, Sortable, Draggable, Datepicker, Moment, Alertify, PageHeader) {\r\n        \"use strict\";\r\n\r\n        function init(content) {\r\n            console.log(content);\r\n            Vue.use(Vuetify);\r\n            Vue.component('draggable', Draggable);\r\n            Vue.component('datepicker', Datepicker);\r\n            Vue.component('pageheader', PageHeader);\r\n            const app = new Vue({\r\n                delimiters: [\"[[\", \"]]\"],\r\n                el: \"#logs\",\r\n                vuetify: new Vuetify(),\r\n                data: {\r\n                    strings: content.strings,\r\n                    courseid: content.courseid,\r\n                    userid: content.userid,\r\n                    timezone: content.timezone,\r\n                    loading: false,\r\n                    errors: [],\r\n\r\n                    dates: [],\r\n                    dates_labels: [],\r\n\r\n                    loading_btn_fliplearning_logs: false,\r\n                    loading_btn_moodle_logs: false,\r\n                },\r\n                mounted() {\r\n                    document.querySelector(\"#logs-loader\").style.display = \"none\";\r\n                    document.querySelector(\"#logs\").style.display = \"block\";\r\n                },\r\n                computed: {\r\n                    dateRangeText () {\r\n                        let dates_array = this.dates.map(date => new Date(date));\r\n                        dates_array.sort(this.sort_dates);\r\n                        this.dates_labels = dates_array.map(date => this.format_date(date));\r\n                        console.log(this.dates_labels);\r\n                        return this.dates_labels.join(' â†’ ');\r\n                    },\r\n                },\r\n                methods: {\r\n                    get_help_content() {\r\n                        let contents = [];\r\n                        contents.push({\r\n                            title: this.strings.section_help_title,\r\n                            description: this.strings.section_help_description,\r\n                        });\r\n                        return contents;\r\n                    },\r\n\r\n                    sort_dates (a, b) {\r\n                        return b.getTime() > a.getTime() ? -1 : b.getTime() < a.getTime() ? 1 : 0;\r\n                    },\r\n\r\n                    format_date (date) {\r\n                        const year = date.getUTCFullYear();\r\n                        const month_number = date.getUTCMonth() + 1;\r\n                        const month = month_number < 10 ? `0${month_number}` : month_number;\r\n                        const day_number = date.getUTCDate();\r\n                        const day = day_number < 10 ? `0${day_number}` : day_number;\r\n                        return `${day}/${month}/${year}`;\r\n                    },\r\n\r\n                    get_timezone() {\r\n                        let information = `${this.strings.change_timezone} ${this.timezone}`\r\n                        return information;\r\n                    },\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            init: init\r\n        };\r\n    });"],"file":"logs.min.js"}