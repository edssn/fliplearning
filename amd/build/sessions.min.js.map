{"version":3,"sources":["../src/sessions.js"],"names":["define","Vue","Vuetify","Axios","Moment","Pagination","ChartStatic","Pageheader","init","content","use","component","vue","delimiters","el","vuetify","data","strings","groups","userid","courseid","timezone","render_has","profile_render","loading","errors","pages","hours_sessions","indicators","sessions","session_count","count","inverted_time","time","inverted_time_colors","sessions_count_colors","search","mounted","document","querySelector","style","display","methods","get_help_content","helpcontents","time_inside_plataform_description_teacher","time_inside_plataform_description_student","activity","activity_inside_plataform_description_teacher","activity_inside_plataform_description_student","push","title","time_inside_plataform","description","activity_inside_plataform","update_interactions","week","action","weekcode","profile","method","url","M","cfg","wwwroot","params","then","response","status","ok","error_messages","error_network","catch","api_error_network","finally","get_point_category_name","point","dimension","series","isY","axis","categories","build_hours_sessions_chart","chart","text","type","backgroundColor","fontFamily","xAxis","days","yAxis","hours","reversed","colorAxis","min","minColor","maxColor","legend","layout","verticalAlign","tooltip","formatter","xCategoryName","yCategoryName","label","sessions_text","value","session_text","borderWidth","borderColor","build_inverted_time_chart","colors","crosshair","time_inverted_x_axis","shared","useHTML","category_name","points","key","convert_time","y","enabled","colorByPoint","build_chart_session_count","session_count_yaxis_title","allowDecimals","valueSuffix","session_count_tooltip_suffix","h","hours_short","m","minutes_short","s","seconds_short","Math","floor","minutes","seconds","info","console","log","get_timezone","information","ss_change_timezone"],"mappings":"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","sourcesContent":["define([\"local_fliplearning/vue\",\r\n        \"local_fliplearning/vuetify\",\r\n        \"local_fliplearning/axios\",\r\n        \"local_fliplearning/moment\",\r\n        \"local_fliplearning/pagination\",\r\n        \"local_fliplearning/chartstatic\",\r\n        \"local_fliplearning/pageheader\",\r\n    ],\r\n    function(Vue, Vuetify, Axios, Moment, Pagination, ChartStatic, Pageheader) {\r\n        \"use strict\";\r\n\r\n        function init(content) {\r\n            // console.log(content);\r\n            Vue.use(Vuetify);\r\n            Vue.component('pagination', Pagination);\r\n            Vue.component('chart', ChartStatic);\r\n            Vue.component('pageheader', Pageheader);\r\n            let vue = new Vue({\r\n                delimiters: [\"[[\", \"]]\"],\r\n                el: \"#work_sessions\",\r\n                vuetify: new Vuetify(),\r\n                data() {\r\n                    return {\r\n                        strings : content.strings,\r\n                        groups : content.groups,\r\n                        userid : content.userid,\r\n                        courseid : content.courseid,\r\n                        timezone : content.timezone,\r\n                        render_has : content.profile_render,\r\n                        loading : false,\r\n                        errors : [],\r\n\r\n                        pages : content.pages,\r\n                        hours_sessions: content.indicators.sessions,\r\n                        session_count: content.indicators.count,\r\n                        inverted_time: content.indicators.time,\r\n                        inverted_time_colors: content.inverted_time_colors,\r\n                        sessions_count_colors: content.sessions_count_colors,\r\n                        search: null,\r\n                    }\r\n                },\r\n                mounted(){\r\n                    document.querySelector(\"#sessions-loader\").style.display = \"none\";\r\n                    document.querySelector(\"#work_sessions\").style.display = \"block\";\r\n                },\r\n                methods : {\r\n                    get_help_content(){\r\n                        let helpcontents = [];\r\n                        let time = (this.render_has == 'teacher')\r\n                            ? this.strings.time_inside_plataform_description_teacher\r\n                            : this.strings.time_inside_plataform_description_student;\r\n                        let activity = (this.render_has == 'teacher')\r\n                            ? this.strings.activity_inside_plataform_description_teacher\r\n                            : this.strings.activity_inside_plataform_description_student;\r\n                        helpcontents.push({\r\n                            title: this.strings.time_inside_plataform,\r\n                            description: time,\r\n                        });\r\n                        helpcontents.push({\r\n                            title: this.strings.activity_inside_plataform,\r\n                            description: activity,\r\n                        });\r\n                        return helpcontents;\r\n                    },\r\n\r\n                    update_interactions(week){\r\n                        this.loading = true;\r\n                        this.errors = [];\r\n                        let data = {\r\n                            action : \"worksessions\",\r\n                            userid : this.userid,\r\n                            courseid : this.courseid,\r\n                            weekcode : week.weekcode,\r\n                            profile : this.render_has,\r\n                        }\r\n                        Axios({\r\n                            method:'get',\r\n                            url: M.cfg.wwwroot + \"/local/fliplearning/ajax.php\",\r\n                            params : data,\r\n                        }).then((response) => {\r\n                            if (response.status == 200 && response.data.ok) {\r\n                                this.hours_sessions = response.data.data.indicators.sessions;\r\n                                this.session_count = response.data.data.indicators.count;\r\n                                this.inverted_time = response.data.data.indicators.time;\r\n                            } else {\r\n                                this.error_messages.push(this.strings.error_network);\r\n                            }\r\n                        }).catch((e) => {\r\n                            this.errors.push(this.strings.api_error_network);\r\n                        }).finally(() => {\r\n                            this.loading = false;\r\n                        });\r\n                        return this.data;\r\n                    },\r\n\r\n                    get_point_category_name(point, dimension) {\r\n                        let series = point.series,\r\n                            isY = dimension === 'y',\r\n                            axis = series[isY ? 'yAxis' : 'xAxis'];\r\n                        return axis.categories[point[isY ? 'y' : 'x']];\r\n                    },\r\n\r\n                    build_hours_sessions_chart() {\r\n                        let chart = new Object();\r\n                        chart.title = {\r\n                            text: null,\r\n                        };\r\n                        chart.chart = {\r\n                            type: 'heatmap',\r\n                            backgroundColor: null,\r\n                            style: {fontFamily: 'poppins'},\r\n                        };\r\n                        chart.xAxis = {\r\n                            categories: this.strings.days,\r\n                        };\r\n                        chart.yAxis = {\r\n                            categories: this.strings.hours,\r\n                            title: null,\r\n                            reversed: true,\r\n                        };\r\n                        chart.colorAxis = {\r\n                            min: 0,\r\n                            minColor: '#E0E0E0',\r\n                            maxColor: '#118AB2'\r\n                        };\r\n                        chart.legend = {\r\n                            layout: 'horizontal',\r\n                            verticalAlign: 'bottom',\r\n                        };\r\n                        chart.tooltip = {\r\n                            formatter: function () {\r\n                                let xCategoryName = vue.get_point_category_name(this.point, 'x');\r\n                                let yCategoryName = vue.get_point_category_name(this.point, 'y');\r\n                                let label = vue.strings.sessions_text;\r\n                                if (this.point.value == 1) {\r\n                                    label = vue.strings.session_text;\r\n                                }\r\n                                return '<b>' + xCategoryName + ' ' + yCategoryName + '</b>: '\r\n                                    + this.point.value +' ' + label;\r\n                            }\r\n                        };\r\n                        chart.series = [{\r\n                            borderWidth: 2,\r\n                            borderColor: '#FAFAFA',\r\n                            data: this.hours_sessions,\r\n                        }];\r\n                        return chart;\r\n                    },\r\n\r\n                    build_inverted_time_chart() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            type: 'bar',\r\n                            backgroundColor: null,\r\n                            style: {fontFamily: 'poppins'},\r\n                        };\r\n                        chart.title = {\r\n                            text: null,\r\n                        };\r\n                        chart.colors = this.inverted_time_colors;\r\n                        chart.xAxis = {\r\n                            type: 'category',\r\n                            crosshair: true,\r\n                        };\r\n                        chart.yAxis = {\r\n                            title: {\r\n                                text: this.strings.time_inverted_x_axis,\r\n                            }\r\n                        };\r\n                        chart.tooltip = {\r\n                            shared:true,\r\n                            useHTML:true,\r\n                            formatter: function () {\r\n                                let category_name = this.points[0].key;\r\n                                let time = vue.convert_time(this.y);\r\n                                return `<b>${category_name}: </b>${time}`;\r\n                            }\r\n                        };\r\n                        chart.legend = {\r\n                            enabled: false\r\n                        };\r\n                        chart.series = [{\r\n                            colorByPoint: true,\r\n                            data: this.inverted_time.data\r\n                        }];\r\n                        return chart;\r\n                    },\r\n\r\n                    build_chart_session_count() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            backgroundColor: null,\r\n                            style: {fontFamily: 'poppins'},\r\n                        };\r\n                        chart.title = {\r\n                            text: null,\r\n                        };\r\n                        chart.colors = this.sessions_count_colors;\r\n                        chart.yAxis = {\r\n                            title: {\r\n                                text: this.strings.session_count_yaxis_title,\r\n                            },\r\n                            allowDecimals: false\r\n                        };\r\n                        chart.xAxis = {\r\n                            categories: this.session_count.categories,\r\n                        };\r\n                        chart.tooltip = {\r\n                            valueSuffix: this.strings.session_count_tooltip_suffix,\r\n                        };\r\n                        chart.legend = {\r\n                            layout: 'horizontal',\r\n                            verticalAlign: 'bottom',\r\n                        };\r\n                        chart.series = this.session_count.data\r\n                        return chart;\r\n                    },\r\n\r\n                    convert_time(time) {\r\n                        time *= 3600; // pasar las horas a segundos\r\n                        let h = this.strings.hours_short;\r\n                        let m = this.strings.minutes_short;\r\n                        let s = this.strings.seconds_short;\r\n                        let hours = Math.floor(time / 3600);\r\n                        let minutes = Math.floor((time % 3600) / 60);\r\n                        let seconds = Math.floor(time % 60);\r\n                        let text;\r\n                        if (hours >= 1) {\r\n                            if (minutes >= 1) {\r\n                                text = `${hours}${h} ${minutes}${m}`;\r\n                            } else {\r\n                                text = `${hours}${h}`;\r\n                            }\r\n                        } else if ((minutes >= 1)) {\r\n                            if (seconds >= 1) {\r\n                                text = `${minutes}${m} ${seconds}${s}`;\r\n                            } else {\r\n                                text = `${minutes}${m}`;\r\n                            }\r\n                        } else {\r\n                            text = `${seconds}${s}`;\r\n                        }\r\n                        return text;\r\n                    },\r\n\r\n                    info() {\r\n                        console.log('Open modal');\r\n                    },\r\n\r\n                    get_timezone(){\r\n                        let information = `${this.strings.ss_change_timezone} ${this.timezone}`\r\n                        return information;\r\n                    },\r\n                }\r\n            })\r\n        }\r\n\r\n        return {\r\n            init : init\r\n        };\r\n    });"],"file":"sessions.min.js"}