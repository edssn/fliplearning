{"version":3,"sources":["../src/grades.js"],"names":["define","Vue","Vuetify","Axios","Pagination","ChartDynamic","PageHeader","EmailForm","HelpDialog","init","content","use","component","vue","delimiters","el","vuetify","data","strings","groups","userid","courseid","timezone","render_has","profile_render","loading","errors","pages","grades","grade_items_average_colors","item_grades_details_colors","item_grades_distribution_colors","default_category","average_categories","average_data","selected_items","item_details","grade_item_title","grade_item_details_categories","grade_item_details_data","grade_item_distribution_categories","grade_item_distribution_data","selected_item","grade_item_users","selected_users","dialog","modulename","moduleid","email_strings","emailComponent","emailTarget","help_dialog","help_contents","pluginSectionName","grade_items_average_chart","item_grades_details_chart","item_grades_distribution_chart","beforeMount","categories","length","calculate_chart_items_average","items","item","find_first_grade_item","update_detail_charts","mounted","document","querySelector","style","display","methods","get_help_content","contents","title","section_help_title","description","section_help_description","change_category","saveInteraction","build_grade_items_average_chart","chart","type","backgroundColor","fontFamily","text","colors","xAxis","legend","enabled","plotOptions","series","cursor","point","events","click","position","x","tooltip","shared","useHTML","formatter","points","value","y","count","gradecount","name","view_details","average","color","isInt","toFixed","grademax","grades_tooltip_average","graded_students","of_conector","student_count","yAxis","allowDecimals","max","labels","format","grades_yaxis_title","build_item_grades_details_chart","category","key","itemname","maxgrade","grade","colorByPoint","build_item_grades_distribution_chart","grades_distribution_yaxis_title","prefix","grades_distribution_tooltip_prefix","send_mail","split","students_label","capitalizeFirstLetter","students_text","stacking","borderWidth","pointPadding","groupPadding","column","subject","subject_prefix","target","replace","toLowerCase","marker","lineWidth","values","forEach","push","average_percentage","itemmodule","coursemoduleid","calculate_chart_item_grade_detail","calculate_chart_item_grades_distribution","item_data","grades_best_grade","maxrating","grades_average_grade","grades_worst_grade","minrating","greater","grades_greater_than","smaller","grades_smaller_than","users","ranges","limit","weight","min","range","index","rawgrade","user","label","i","n","string","charAt","toUpperCase","slice","update_dialog","openChartHelp","grade_items_average_help_title","grade_items_average_help_description_p1","grade_items_average_help_description_p2","grade_items_average_help_description_p3","item_grades_details_help_title","item_grades_details_help_description_p1","item_grades_details_help_description_p2","item_grades_distribution_help_title","item_grades_distribution_help_description_p1","item_grades_distribution_help_description_p2","item_grades_distribution_help_description_p3","update_help_dialog","interaction","interactiontype","action","pluginsection","url","window","location","href","method","M","cfg","wwwroot","params","then","catch","get_timezone","information","change_timezone"],"mappings":"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","sourcesContent":["define([\"local_fliplearning/vue\",\r\n        \"local_fliplearning/vuetify\",\r\n        \"local_fliplearning/axios\",\r\n        \"local_fliplearning/pagination\",\r\n        \"local_fliplearning/chartdynamic\",\r\n        \"local_fliplearning/pageheader\",\r\n        \"local_fliplearning/emailform\",\r\n        \"local_fliplearning/helpdialog\",\r\n    ],\r\n    function(Vue, Vuetify, Axios, Pagination, ChartDynamic, PageHeader, EmailForm, HelpDialog) {\r\n        \"use strict\";\r\n\r\n        function init(content) {\r\n            // console.logs(content);\r\n            Vue.use(Vuetify);\r\n            Vue.component('pagination', Pagination);\r\n            Vue.component('chart', ChartDynamic);\r\n            Vue.component('pageheader', PageHeader);\r\n            Vue.component('emailform', EmailForm);\r\n            Vue.component('helpdialog', HelpDialog);\r\n            let vue = new Vue({\r\n                delimiters: [\"[[\", \"]]\"],\r\n                el: \"#teacher_grades\",\r\n                vuetify: new Vuetify(),\r\n                data() {\r\n                    return {\r\n                        strings: content.strings,\r\n                        groups: content.groups,\r\n                        userid: content.userid,\r\n                        courseid: content.courseid,\r\n                        timezone: content.timezone,\r\n                        render_has: content.profile_render,\r\n                        loading: false,\r\n                        errors: [],\r\n                        pages: content.pages,\r\n\r\n                        grades: content.grades,\r\n                        grade_items_average_colors: content.grade_items_average_colors,\r\n                        item_grades_details_colors: content.item_grades_details_colors,\r\n                        item_grades_distribution_colors: content.item_grades_distribution_colors,\r\n                        default_category: null,\r\n                        average_categories: [],\r\n                        average_data: [],\r\n                        selected_items: [],\r\n                        item_details: [],\r\n\r\n                        grade_item_title: \"\",\r\n                        grade_item_details_categories: [],\r\n                        grade_item_details_data: [],\r\n\r\n                        grade_item_distribution_categories: [],\r\n                        grade_item_distribution_data: [],\r\n\r\n                        selected_item: null,\r\n\r\n                        grade_item_users: null,\r\n                        selected_users: [],\r\n                        dialog: false,\r\n                        modulename: \"\",\r\n                        moduleid: false,\r\n                        email_strings: content.strings.email_strings,\r\n                        emailComponent: \"\",\r\n                        emailTarget: \"\",\r\n\r\n                        help_dialog: false,\r\n                        help_contents: [],\r\n\r\n                        pluginSectionName: \"teacher_grades\",\r\n                        grade_items_average_chart: \"grade_items_average_chart\",\r\n                        item_grades_details_chart: \"item_grades_details_chart\",\r\n                        item_grades_distribution_chart: \"item_grades_distribution_chart\",\r\n                    }\r\n                },\r\n                beforeMount() {\r\n                    if (this.grades.categories.length) {\r\n                        this.default_category = this.grades.categories[0];\r\n                        this.calculate_chart_items_average(this.default_category.items);\r\n                        let item = this.find_first_grade_item(this.default_category.items);\r\n                        this.update_detail_charts(item);\r\n                    };\r\n                },\r\n                mounted() {\r\n                    document.querySelector(\"#teacher_grades_loader\").style.display = \"none\";\r\n                    document.querySelector(\"#teacher_grades\").style.display = \"block\";\r\n                },\r\n                methods: {\r\n                    get_help_content() {\r\n                        let contents = [];\r\n                        contents.push({\r\n                            title: this.strings.section_help_title,\r\n                            description: this.strings.section_help_description,\r\n                        });\r\n                        return contents;\r\n                    },\r\n\r\n                    change_category(items) {\r\n                        this.calculate_chart_items_average(items);\r\n                        let item = this.find_first_grade_item(items);\r\n                        this.update_detail_charts(item);\r\n\r\n                        this.saveInteraction ('grade_item_selector', \"selected\", \"grade_item\", 11);\r\n                    },\r\n\r\n                    build_grade_items_average_chart() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            type: 'column',\r\n                            backgroundColor: null,\r\n                            style: { fontFamily: 'poppins' },\r\n                        };\r\n                        chart.title = {\r\n                            text: null\r\n                        };\r\n                        chart.colors = this.grade_items_average_colors;\r\n                        chart.xAxis = {\r\n                            categories: this.average_categories\r\n                        };\r\n                        chart.legend = {\r\n                            enabled: false\r\n                        };\r\n                        chart.plotOptions = {\r\n                            series: {\r\n                                cursor: 'pointer',\r\n                                point: {\r\n                                    events: {\r\n                                        click: function() {\r\n                                            let position = this.x;\r\n                                            let item = vue.selected_items[position];\r\n                                            vue.update_detail_charts(item);\r\n\r\n                                            vue.saveInteraction (\r\n                                                vue.grade_items_average_chart,\r\n                                                \"selected\",\r\n                                                \"grade_item\",\r\n                                                12\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        chart.tooltip = {\r\n                            shared: true,\r\n                            useHTML: true,\r\n                            formatter: function() {\r\n                                let position = this.points[0].point.x;\r\n                                let value = this.y;\r\n                                let item = vue.selected_items[position];\r\n                                let count = item.gradecount;\r\n                                let name = this.x;\r\n                                let view_details = vue.strings.view_details;\r\n                                let average = Number(item.average);\r\n                                let color = this.points[0].color;\r\n                                value = vue.isInt(value) ? value : value.toFixed(2);\r\n                                average = vue.isInt(average) ? average : average.toFixed(2);\r\n                                let grademax = item.grademax;\r\n                                return '<small>' + name + '</small><br/>' +\r\n                                    '<b style=\"color: ' + color + ';\">• </b>' +\r\n                                    vue.strings.grades_tooltip_average + ': ' + average + '/' + grademax + ' (' + value + ' %)<br/>' +\r\n                                    '<b style=\"color: ' + color + ';\">• </b>' +\r\n                                    vue.strings.graded_students + ': ' + count + ' ' +\r\n                                    vue.strings.of_conector + ' ' + vue.grades.student_count + '<br/>' +\r\n                                    '<small>' + view_details + '</small>';\r\n                            }\r\n                        };\r\n                        chart.yAxis = [{\r\n                            allowDecimals: false,\r\n                            max: 100,\r\n                            labels: {\r\n                                format: '{value} %',\r\n                            },\r\n                            title: {\r\n                                text: this.strings.grades_yaxis_title,\r\n                            }\r\n                        }];\r\n                        chart.series = [{\r\n                            data: this.average_data,\r\n                        }];\r\n                        return chart;\r\n                    },\r\n\r\n                    build_item_grades_details_chart() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            type: 'bar',\r\n                            backgroundColor: null,\r\n                            style: { fontFamily: 'poppins' },\r\n                        };\r\n                        chart.title = {\r\n                            text: null,\r\n                        };\r\n                        chart.colors = this.item_grades_details_colors;\r\n                        chart.xAxis = {\r\n                            type: 'category',\r\n                        };\r\n                        chart.legend = {\r\n                            enabled: false\r\n                        };\r\n                        chart.tooltip = {\r\n                            shared: true,\r\n                            useHTML: true,\r\n                            formatter: function() {\r\n                                let category = this.points[0].key;\r\n                                let name = vue.selected_item.itemname;\r\n                                let maxgrade = vue.selected_item.grademax;\r\n                                let grade = this.y;\r\n                                let color = this.points[0].color;\r\n                                grade = vue.isInt(grade) ? grade : grade.toFixed(2);\r\n                                return '<small>' + name + '</small> <br/>' +\r\n                                    '<b style=\"color: ' + color + ';\">• </b>' +\r\n                                    category + ': ' + grade + '/' + maxgrade + '<br/>';\r\n                            }\r\n                        };\r\n                        chart.yAxis = [{\r\n                            title: {\r\n                                enabled: false,\r\n                            }\r\n                        }];\r\n                        chart.series = [{\r\n                            colorByPoint: true,\r\n                            data: this.grade_item_details_data,\r\n                        }];\r\n                        return chart;\r\n                    },\r\n\r\n                    build_item_grades_distribution_chart() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            backgroundColor: null,\r\n                            style: { fontFamily: 'poppins' },\r\n                        };\r\n                        chart.title = {\r\n                            text: null,\r\n                        };\r\n                        chart.colors = this.item_grades_distribution_colors;\r\n                        chart.xAxis = {\r\n                            categories: this.grade_item_distribution_categories\r\n                        };\r\n                        chart.yAxis = [{\r\n                            title: {\r\n                                text: this.strings.grades_distribution_yaxis_title,\r\n                            },\r\n                            allowDecimals: false,\r\n                        }];\r\n                        chart.legend = {\r\n                            enabled: false\r\n                        };\r\n                        chart.tooltip = {\r\n                            useHTML: true,\r\n                            formatter: function() {\r\n                                let prefix = vue.strings.grades_distribution_tooltip_prefix;\r\n                                let send_mail = vue.strings.send_mail;\r\n                                let name = this.x.split('<br/>')[0] || 'Rango';\r\n                                let value = this.y;\r\n                                let students_label = vue.capitalizeFirstLetter(vue.strings.students_text);\r\n                                return '<small>' + prefix + ': ' + name + '</small><br/>' +\r\n                                    '<b style=\"color: ' + this.color + ';\">• </b>' +\r\n                                    students_label + ': ' + value + ' <br/>' +\r\n                                    '<small>' + send_mail + '</small>';\r\n                            }\r\n                        };\r\n                        chart.plotOptions = {\r\n                            series: {\r\n                                stacking: 'normal',\r\n                                borderWidth: 1,\r\n                                pointPadding: 0,\r\n                                groupPadding: 0,\r\n                            },\r\n                            column: {\r\n                                point: {\r\n                                    events: {\r\n                                        click: function() {\r\n                                            vue.emailComponent = \"\";\r\n                                            vue.emailTarget = \"\";\r\n\r\n                                            let position = this.x;\r\n                                            vue.selected_users = vue.grade_item_users[position];\r\n                                            vue.email_strings.subject = vue.email_strings.subject_prefix +\r\n                                                \" - \" + vue.selected_item.itemname;\r\n\r\n                                            let target = vue.grade_item_distribution_categories[position].split(\"<br/>\")[1];\r\n                                            target = `${target.replace(/ /g, '_').toLowerCase()}_range_users`;\r\n\r\n                                            vue.emailComponent = vue.item_grades_distribution_chart;\r\n                                            vue.emailTarget = target;\r\n\r\n                                            vue.dialog = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        chart.series = [{\r\n                            type: 'column',\r\n                            data: this.grade_item_distribution_data\r\n                        }, {\r\n                            type: 'spline',\r\n                            data: this.grade_item_distribution_data,\r\n                            marker: {\r\n                                lineWidth: 1,\r\n                            }\r\n                        }];\r\n                        return chart;\r\n                    },\r\n\r\n                    calculate_chart_items_average(items) {\r\n                        let values = [];\r\n                        let categories = [];\r\n                        items.forEach(item => {\r\n                            values.push(item.average_percentage);\r\n                            categories.push(item.itemname);\r\n                        });\r\n                        this.average_categories = categories;\r\n                        this.average_data = values;\r\n                        this.selected_items = items;\r\n                    },\r\n\r\n                    update_detail_charts(item) {\r\n                        this.modulename = item.itemmodule;\r\n                        this.moduleid = item.coursemoduleid;\r\n                        this.grade_item_title = item.itemname;\r\n                        this.calculate_chart_item_grade_detail(item);\r\n                        this.calculate_chart_item_grades_distribution(item);\r\n                    },\r\n\r\n                    calculate_chart_item_grade_detail(item) {\r\n                        this.selected_item = item;\r\n                        let item_data = [{\r\n                            name: this.strings.grades_best_grade,\r\n                            y: Number(item.maxrating) || 0\r\n                        }, {\r\n                            name: this.strings.grades_average_grade,\r\n                            y: Number(item.average) || 0\r\n                        }, {\r\n                            name: this.strings.grades_worst_grade,\r\n                            y: Number(item.minrating) || 0\r\n                        }];\r\n                        this.grade_item_details_data = item_data;\r\n                    },\r\n\r\n                    calculate_chart_item_grades_distribution(item) {\r\n                        let greater = this.strings.grades_greater_than;\r\n                        let smaller = this.strings.grades_smaller_than;\r\n                        let categories = [\r\n                            `${greater} 90%`,\r\n                            `${greater} 80%`,\r\n                            `${greater} 70%`,\r\n                            `${greater} 60%`,\r\n                            `${greater} 50%`,\r\n                            `${smaller} 50%`\r\n                        ];\r\n                        let values = [0, 0, 0, 0, 0, 0];\r\n                        let users = [\r\n                            [],\r\n                            [],\r\n                            [],\r\n                            [],\r\n                            [],\r\n                            []\r\n                        ];\r\n                        if (item) {\r\n                            let weights = [0.9, 0.8, 0.7, 0.6, 0.5, 0];\r\n                            let ranges = [];\r\n                            let grademax = item.grademax;\r\n                            let limit = grademax;\r\n                            weights.forEach(weight => {\r\n                                let grade = grademax * weight;\r\n                                ranges.push({ max: limit, min: grade, count: 0 });\r\n                                limit = grade - 0.1;\r\n                            });\r\n\r\n                            item.grades.forEach(grade => {\r\n                                ranges.forEach((range, index) => {\r\n                                    if (grade.rawgrade >= range.min && grade.rawgrade <= range.max) {\r\n                                        range.count++;\r\n                                        users[index].push(grade.user);\r\n                                    }\r\n                                });\r\n                            });\r\n\r\n                            values = [];\r\n                            ranges.forEach((range, index) => {\r\n                                let max = this.isInt(range.max) ? range.max : range.max.toFixed(1);\r\n                                let min = this.isInt(range.min) ? range.min : range.min.toFixed(1);\r\n                                let label = `${max} - ${min}<br/>${categories[index]}`;\r\n                                categories[index] = label;\r\n                                values.push(range.count);\r\n                            });\r\n                        }\r\n                        this.grade_item_users = users;\r\n                        this.grade_item_distribution_categories = categories,\r\n                            this.grade_item_distribution_data = values;\r\n                    },\r\n\r\n                    find_first_grade_item(items) {\r\n                        let item;\r\n                        if (items.length) {\r\n                            let count = items.length;\r\n                            for (let i = 0; i < count; i++) {\r\n                                if (items[i].maxrating > 0) {\r\n                                    item = items[i];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!item) {\r\n                                item = items[0];\r\n                            }\r\n                        }\r\n                        return item;\r\n                    },\r\n\r\n                    isInt(n) {\r\n                        return n % 1 === 0;\r\n                    },\r\n\r\n                    capitalizeFirstLetter(string) {\r\n                        return string.charAt(0).toUpperCase() + string.slice(1);\r\n                    },\r\n\r\n                    update_dialog(value) {\r\n                        this.dialog = value;\r\n                    },\r\n\r\n                    openChartHelp(chart) {\r\n                        let contents = [];\r\n                        if (chart == this.grade_items_average_chart) {\r\n                            contents.push({\r\n                                title: this.strings.grade_items_average_help_title,\r\n                                description: this.strings.grade_items_average_help_description_p1,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.grade_items_average_help_description_p2,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.grade_items_average_help_description_p3,\r\n                            });\r\n                        } else if (chart == this.item_grades_details_chart) {\r\n                            contents.push({\r\n                                title: this.strings.item_grades_details_help_title,\r\n                                description: this.strings.item_grades_details_help_description_p1,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.item_grades_details_help_description_p2,\r\n                            });\r\n                        } else if (chart == this.item_grades_distribution_chart) {\r\n                            contents.push({\r\n                                title: this.strings.item_grades_distribution_help_title,\r\n                                description: this.strings.item_grades_distribution_help_description_p1,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.item_grades_distribution_help_description_p2,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.item_grades_distribution_help_description_p3,\r\n                            });\r\n                        }\r\n                        this.help_contents = contents;\r\n                        if (this.help_contents.length) {\r\n                            this.help_dialog = true;\r\n                            this.saveInteraction (chart, \"viewed\", \"chart_help_dialog\", 7);\r\n                        }\r\n                    },\r\n\r\n                    update_help_dialog(value) {\r\n                        this.help_dialog = value;\r\n                    },\r\n\r\n                    saveInteraction (component, interaction, target, interactiontype) {\r\n                        let data = {\r\n                            action : \"saveinteraction\",\r\n                            pluginsection : this.pluginSectionName,\r\n                            component,\r\n                            interaction,\r\n                            target,\r\n                            url: window.location.href,\r\n                            interactiontype,\r\n                            courseid : this.courseid,\r\n                            userid : this.userid,\r\n                        };\r\n                        Axios({\r\n                            method:'get',\r\n                            url: `${M.cfg.wwwroot}/local/fliplearning/ajax.php`,\r\n                            params : data,\r\n                        }).then((r) => {}).catch((e) => {});\r\n                    },\r\n\r\n                    get_timezone() {\r\n                        let information = `${this.strings.change_timezone} ${this.timezone}`\r\n                        return information;\r\n                    },\r\n                }\r\n            })\r\n        }\r\n\r\n        return {\r\n            init: init\r\n        };\r\n    });"],"file":"grades.min.js"}