{"version":3,"sources":["../src/grades.js"],"names":["define","Vue","Vuetify","Axios","Moment","Pagination","Chart","Pageheader","Emailform","init","content","console","log","use","component","vue","delimiters","el","vuetify","data","strings","groups","userid","courseid","timezone","render_has","profile_render","loading","errors","pages","grades","default_category","average_categories","average_data","selected_items","item_details","grade_item_title","grade_item_details_categories","grade_item_details_data","grade_item_distribution_categories","grade_item_distribution_data","selected_item","grade_item_users","selected_users","dialog","modulename","moduleid","email_strings","beforeMount","categories","length","calculate_chart_items_average","items","item","find_first_grade_item","update_detail_charts","mounted","document","querySelector","style","display","computed","methods","get_help_content","change_category","build_chart_items_average","chart","type","backgroundColor","title","text","grades_chart_title","xAxis","legend","enabled","plotOptions","series","cursor","point","events","click","position","x","tooltip","formatter","value","y","name","average","isInt","toFixed","grademax","count","gradecount","grades_tooltip_average","grades_tooltip_grade","grades_tooltip_students","student_count","yAxis","allowDecimals","labels","format","grades_yaxis_title","credits","lang","noData","no_data","build_chart_item_grade_detail","subtitle","grades_details_subtitle","category","itemname","maxgrade","grade","maxrating","minrating","build_chart_item_grades_distribution","grades_distribution_subtitle","grades_distribution_yaxis_title","prefix","grades_distribution_tooltip_prefix","suffix","grades_distribution_tooltip_suffix","stacking","borderWidth","pointPadding","groupPadding","column","subject","subject_prefix","marker","lineWidth","values","forEach","push","average_percentage","itemmodule","coursemoduleid","calculate_chart_item_grade_detail","calculate_chart_item_grades_distribution","item_data","greater","grades_greater_than","smaller","grades_smaller_than","users","ranges","limit","weight","max","min","range","index","rawgrade","user","label","i","n","update_dialog"],"mappings":"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","sourcesContent":["define([\"local_fliplearning/vue\",\r\n        \"local_fliplearning/vuetify\",\r\n        \"local_fliplearning/axios\",\r\n        \"local_fliplearning/moment\",\r\n        \"local_fliplearning/pagination\",\r\n        \"local_fliplearning/chartcomponent\",\r\n        \"local_fliplearning/pageheader\",\r\n        \"local_fliplearning/emailform\"\r\n    ],\r\n    function(Vue, Vuetify, Axios, Moment, Pagination, Chart, Pageheader, Emailform) {\r\n        \"use strict\";\r\n\r\n        function init(content) {\r\n            console.log(content);\r\n            Vue.use(Vuetify)\r\n            Vue.component('pagination', Pagination);\r\n            Vue.component('chart', Chart);\r\n            Vue.component('pageheader', Pageheader);\r\n            Vue.component('emailform', Emailform);\r\n            let vue = new Vue({\r\n                delimiters: [\"[[\", \"]]\"],\r\n                el: \"#grades\",\r\n                vuetify: new Vuetify(),\r\n                data() {\r\n                    return {\r\n                        strings : content.strings,\r\n                        groups : content.groups,\r\n                        userid : content.userid,\r\n                        courseid : content.courseid,\r\n                        timezone : content.timezone,\r\n                        render_has : content.profile_render,\r\n                        loading : false,\r\n                        errors : [],\r\n                        pages : content.pages,\r\n\r\n                        grades: content.grades,\r\n                        default_category: null,\r\n                        average_categories: [],\r\n                        average_data: [],\r\n                        selected_items: [],\r\n                        item_details: [],\r\n\r\n                        grade_item_title: \"\",\r\n                        grade_item_details_categories: [],\r\n                        grade_item_details_data: [],\r\n\r\n                        grade_item_distribution_categories: [],\r\n                        grade_item_distribution_data: [],\r\n\r\n                        selected_item: null,\r\n\r\n                        grade_item_users: null,\r\n                        selected_users: [],\r\n                        dialog : false,\r\n                        modulename : \"\",\r\n                        moduleid : false,\r\n                        email_strings: content.strings.email_strings,\r\n                    }\r\n                },\r\n                beforeMount(){\r\n                    if (this.grades.categories.length) {\r\n                        this.default_category = this.grades.categories[0];\r\n                        this.calculate_chart_items_average(this.default_category.items);\r\n                        let item = this.find_first_grade_item(this.default_category.items);\r\n                        this.update_detail_charts(item);\r\n                    };\r\n                },\r\n                mounted(){\r\n                    document.querySelector(\"#sessions-loader\").style.display = \"none\";\r\n                    document.querySelector(\"#grades\").style.display = \"block\";\r\n                },\r\n                computed :{\r\n\r\n                },\r\n                methods : {\r\n                    get_help_content(){\r\n                        let helpcontents = `Texto de Ayuda`;\r\n                        return helpcontents;\r\n                    },\r\n\r\n                    change_category(items) {\r\n                        this.calculate_chart_items_average(items);\r\n                        let item = this.find_first_grade_item(items);\r\n                        this.update_detail_charts(item);\r\n                    },\r\n\r\n                    build_chart_items_average() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            type: 'column',\r\n                            backgroundColor: '#FAFAFA',\r\n                        };\r\n                        chart.title = {\r\n                            text: this.strings.grades_chart_title\r\n                        };\r\n                        chart.xAxis = {\r\n                            categories: this.average_categories\r\n                        };\r\n                        chart.legend = {\r\n                            enabled: false\r\n                        };\r\n                        chart.plotOptions = {\r\n                            series: {\r\n                                cursor: 'pointer',\r\n                                point: {\r\n                                    events: {\r\n                                        click: function () {\r\n                                            let position = this.x;\r\n                                            let item = vue.selected_items[position];\r\n                                            vue.update_detail_charts(item);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        chart.tooltip = {\r\n                            formatter: function() {\r\n                                let position = this.point.x;\r\n                                let value = this.point.y;\r\n                                let item = vue.selected_items[position];\r\n                                let name = this.x;\r\n                                let average = Number(item.average);\r\n                                value = vue.isInt(value) ? value : value.toFixed(2);\r\n                                average = vue.isInt(average) ? average : average.toFixed(2);\r\n                                let grademax = item.grademax;\r\n                                let count = item.gradecount;\r\n                                let text = '<b>' + name + '<b> <br/>' +\r\n                                    vue.strings.grades_tooltip_average + ': ' + average + ' (' + value + ' %)<br/>' +\r\n                                    vue.strings.grades_tooltip_grade + ': ' + grademax + '<br/>' +\r\n                                    count + ' ' + vue.strings.grades_tooltip_students + ' ' +\r\n                                    vue.grades.student_count\r\n                                    + '<br/>';\r\n                                return text;\r\n                            }\r\n                        };\r\n                        chart.yAxis = [{\r\n                            allowDecimals: false,\r\n                            labels: {\r\n                                format: '{value} %',\r\n                            },\r\n                            title: {\r\n                                text: this.strings.grades_yaxis_title,\r\n                            }\r\n                        }];\r\n                        chart.series = [{\r\n                            data: this.average_data,\r\n                        }];\r\n                        chart.credits = {\r\n                            enabled: false\r\n                        };\r\n                        chart.lang = {\r\n                            noData: this.strings.no_data,\r\n                        };\r\n                        return chart;\r\n                    },\r\n\r\n                    build_chart_item_grade_detail() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            type: 'bar',\r\n                            backgroundColor: '#FAFAFA',\r\n                        };\r\n                        chart.title = {\r\n                            text: this.grade_item_title,\r\n                        };\r\n                        chart.subtitle = {\r\n                            text: this.strings.grades_details_subtitle,\r\n                        };\r\n                        chart.xAxis = {\r\n                            categories: this.strings.grade_item_details_categories,\r\n                        };\r\n                        chart.legend = {\r\n                            enabled: false\r\n                        };\r\n                        chart.tooltip = {\r\n                            formatter: function() {\r\n                                let category = this.x;\r\n                                let name = vue.selected_item.itemname;\r\n                                let maxgrade = vue.selected_item.grademax;\r\n                                let grade = 0;\r\n                                if (this.point.x == 0) {\r\n                                    grade = vue.selected_item.maxrating;\r\n                                } else if (this.point.x == 1) {\r\n                                    grade = vue.selected_item.average;\r\n                                } else {\r\n                                    grade = vue.selected_item.minrating;\r\n                                }\r\n                                grade = Number(grade);\r\n                                grade = vue.isInt(grade) ? grade : grade.toFixed(2);\r\n                                let text = '<b>' + name + '<b> <br/>' +\r\n                                    category + ': ' + grade + '/' + maxgrade + '<br/>';\r\n                                return text;\r\n                            }\r\n                        };\r\n                        chart.yAxis = [{\r\n                            title: {\r\n                                enabled: false,\r\n                            }\r\n                        }];\r\n                        chart.series = [{\r\n                            data: this.grade_item_details_data,\r\n                        }];\r\n                        chart.credits = {\r\n                            enabled: false\r\n                        };\r\n                        chart.lang = {\r\n                            noData: this.strings.no_data,\r\n                        };\r\n                        return chart;\r\n                    },\r\n\r\n                    build_chart_item_grades_distribution() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            backgroundColor: '#FAFAFA',\r\n                        };\r\n                        chart.title = {\r\n                            text: this.grade_item_title,\r\n                        };\r\n                        chart.subtitle = {\r\n                            text: this.strings.grades_distribution_subtitle,\r\n                        };\r\n                        chart.xAxis = {\r\n                            categories: this.grade_item_distribution_categories\r\n                        };\r\n                        chart.yAxis = [{\r\n                            title: {\r\n                                text: this.strings.grades_distribution_yaxis_title,\r\n                            }\r\n                        }];\r\n                        chart.legend = {\r\n                            enabled: false\r\n                        };\r\n                        chart.tooltip = {\r\n                            formatter: function() {\r\n                                let prefix = vue.strings.grades_distribution_tooltip_prefix;\r\n                                let suffix = vue.strings.grades_distribution_tooltip_suffix;\r\n                                let name = this.x;\r\n                                let value = this.y;\r\n                                let text = '<b>' + prefix + ': </b> '+ name + ' <br/>'\r\n                                    + value + ' ' + suffix;\r\n                                return text;\r\n                            }\r\n                        };\r\n                        chart.plotOptions = {\r\n                            series: {\r\n                                stacking: 'normal',\r\n                                borderWidth: 1,\r\n                                pointPadding: 0,\r\n                                groupPadding: 0,\r\n                            },\r\n                            column:{\r\n                                point:{\r\n                                    events: {\r\n                                        click: function () {\r\n                                            let position = this.x;\r\n                                            vue.selected_users = vue.grade_item_users[position];\r\n                                            vue.email_strings.subject = vue.email_strings.subject_prefix\r\n                                                + \" - \" + vue.selected_item.itemname;\r\n                                            vue.dialog = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        chart.series = [{\r\n                            type: 'column',\r\n                            name: 'Jane',\r\n                            data: this.grade_item_distribution_data\r\n                        }, {\r\n                            type: 'spline',\r\n                            name: 'Average',\r\n                            data: this.grade_item_distribution_data,\r\n                            marker: {\r\n                                lineWidth: 1,\r\n                            }\r\n                        }];\r\n                        chart.credits = {\r\n                            enabled: false\r\n                        };\r\n                        chart.lang = {\r\n                            noData: this.strings.no_data,\r\n                        };\r\n                        return chart;\r\n                    },\r\n\r\n                    calculate_chart_items_average(items) {\r\n                        let values = [];\r\n                        let categories = [];\r\n                        items.forEach(item => {\r\n                            values.push(item.average_percentage);\r\n                            categories.push(item.itemname);\r\n                        });\r\n                        this.average_categories = categories;\r\n                        this.average_data = values;\r\n                        this.selected_items = items;\r\n                    },\r\n\r\n                    update_detail_charts (item) {\r\n                        this.modulename = item.itemmodule;\r\n                        this.moduleid = item.coursemoduleid;\r\n                        this.grade_item_title = item.itemname;\r\n                        this.calculate_chart_item_grade_detail(item);\r\n                        this.calculate_chart_item_grades_distribution(item);\r\n                    },\r\n\r\n                    calculate_chart_item_grade_detail(item) {\r\n                        this.selected_item = item;\r\n                        let item_data = [0, 0, 0];\r\n                        if (item) {\r\n                            item_data = [\r\n                                Number(item.maxrating),\r\n                                Number(item.average),\r\n                                Number(item.minrating),\r\n                            ];\r\n                        }\r\n                        this.grade_item_details_data = item_data;\r\n                    },\r\n\r\n                    calculate_chart_item_grades_distribution(item) {\r\n                        let greater = this.strings.grades_greater_than;\r\n                        let smaller = this.strings.grades_smaller_than;\r\n                        let categories = [\r\n                            `${greater} 90%`,\r\n                            `${greater} 80%`,\r\n                            `${greater} 70%`,\r\n                            `${greater} 60%`,\r\n                            `${greater} 50%`,\r\n                            `${smaller} 50%`];\r\n                        let values = [0, 0, 0, 0, 0, 0];\r\n                        let users = [[], [], [], [], [], []];\r\n                        if (item) {\r\n                            let weights = [0.9, 0.8, 0.7, 0.6, 0.5, 0];\r\n                            let ranges = [];\r\n                            let grademax = item.grademax;\r\n                            let limit = grademax;\r\n                            weights.forEach(weight => {\r\n                                let grade = grademax * weight;\r\n                                ranges.push({ max: limit, min: grade, count: 0});\r\n                                limit = grade - 0.1;\r\n                            });\r\n\r\n                            item.grades.forEach(grade => {\r\n                                ranges.forEach((range, index) => {\r\n                                    if (grade.rawgrade >= range.min && grade.rawgrade <= range.max) {\r\n                                        range.count++;\r\n                                        users[index].push(grade.user);\r\n                                    }\r\n                                });\r\n                            });\r\n\r\n                            values = [];\r\n                            ranges.forEach((range, index) => {\r\n                                let max = this.isInt(range.max) ? range.max : range.max.toFixed(1);\r\n                                let min = this.isInt(range.min) ? range.min : range.min.toFixed(1);\r\n                                let label = `${max} - ${min}<br/>${categories[index]}`;\r\n                                categories[index] = label;\r\n                                values.push(range.count);\r\n                            });\r\n                        }\r\n                        this.grade_item_users = users;\r\n                        this.grade_item_distribution_categories = categories,\r\n                        this.grade_item_distribution_data = values;\r\n                    },\r\n\r\n                    find_first_grade_item(items) {\r\n                        let item;\r\n                        if (items.length) {\r\n                            let count = items.length;\r\n                            for (let i = 0; i < count; i++) {\r\n                                if (items[i].maxrating > 0) {\r\n                                    item = items[i];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!item) {\r\n                                item = items[0];\r\n                            }\r\n                        }\r\n                        return item;\r\n                    },\r\n\r\n                    isInt(n) {\r\n                        return n % 1 === 0;\r\n                    },\r\n\r\n                    update_dialog (value) {\r\n                        this.dialog = value;\r\n                    },\r\n                }\r\n            })\r\n        }\r\n\r\n        return {\r\n            init : init\r\n        };\r\n    });"],"file":"grades.min.js"}