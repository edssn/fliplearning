{"version":3,"sources":["../src/setweeks.js"],"names":["define","Vue","Vuetify","Axios","Sortable","Draggable","Datepicker","Moment","Alertify","PageHeader","init","content","console","log","use","component","delimiters","el","vuetify","data","display_settings","settings","new_group","scroll_mode","strings","sections","courseid","userid","raw_weeks","weeks","disabled_dates","days","saving_loader","error_messages","save_successful","dates","datesLabels","modal","modalDatePicker","mounted","initBlockDates","document","querySelector","style","display","computed","dateRangeText","i","dates_array","map","date","Date","sort","sortDates","formatDate","weekstart","split","reverse","join","weekend","methods","section_name","section","name","length","section_exist","exist","exists","format_name","position","customFormatter","weeks_start_at","format","add_week","start","get_start_week","get_last_date","end","get_end_week","push","week","collapsabled","hours_dedications","removable","blockDate","has_items","array","remove_week","index","close_delete_confirm","element_index","indexOf","splice","ask_delete_confirm","delete_confirm","get_date_next_day","requested_day","output_format","toLowerCase","current_day","add","parseInt","save_changes","empty_weeks","error","error_empty_week","weeks_deleted_from_course","error_section_removed","confirm","save_warning_content","action","newinstance","minify_query","url","window","location","href","method","M","cfg","wwwroot","params","then","response","status","ok","success","error_network","catch","finally","warning","cancel_action","set","title","save_warning_title","labels","cancel","confirm_cancel","confirm_ok","minify","forEach","wk","h","s","e","sid","sectionid","JSON","stringify","week_position","section_position","exists_mistakes","change_collapsabled","course_finished","finished","last","now","get_settings_status","visible","Object","keys","key","tw_plugin_visible","tw_plugin_hidden","a","b","getTime","year","getUTCFullYear","month_number","getUTCMonth","month","day_number","getUTCDate","day","get_help_content","help_contents","help","help_title","description","help_description","pass_week","start_weeks","setDate","getDate","toISOString","substr","start_week","end_date","saveWeek","diffDays","diffTime","Math","abs","ceil","dates_aux","new_last_dates","newLastDate"],"mappings":"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","sourcesContent":["define([\"local_fliplearning/vue\",\r\n        \"local_fliplearning/vuetify\",\r\n        \"local_fliplearning/axios\",\r\n        \"local_fliplearning/sortablejs\",\r\n        \"local_fliplearning/draggable\",\r\n        \"local_fliplearning/datepicker\",\r\n        \"local_fliplearning/moment\",\r\n        \"local_fliplearning/alertify\",\r\n        \"local_fliplearning/pageheader\",\r\n    ],\r\n    function(Vue, Vuetify, Axios, Sortable, Draggable, Datepicker, Moment, Alertify, PageHeader) {\r\n        \"use strict\";\r\n\r\n        function init(content) {\r\n            // content = add_collapsabled_property_to_weeks(content);\r\n            console.log(content);\r\n            Vue.use(Vuetify);\r\n            Vue.component('draggable', Draggable);\r\n            Vue.component('datepicker', Datepicker);\r\n            Vue.component('pageheader', PageHeader);\r\n            const app = new Vue({\r\n                delimiters: [\"[[\", \"]]\"],\r\n                el: \"#setweeks\",\r\n                vuetify: new Vuetify(),\r\n                data: {\r\n                    display_settings: false,\r\n                    settings: content.settings,\r\n                    new_group: false,\r\n                    scroll_mode: false,\r\n                    // weeks_started_at: new Date(Moment(Number(content.weeks[0].weekstart) * 1000)),\r\n                    // weeks_started_at: new Date(Moment(content.weeks[0].weekstart)),\r\n                    // weeks_started_at: Number(content.weeks[0].weekstart) * 1000,\r\n                    strings: content.strings,\r\n                    sections: content.sections,\r\n                    courseid: content.courseid,\r\n                    userid: content.userid,\r\n                    raw_weeks: content.weeks,\r\n                    disabled_dates: {\r\n                        days: [0, 2, 3, 4, 5, 6]\r\n                    },\r\n                    saving_loader: false,\r\n                    error_messages: [],\r\n                    save_successful: false,\r\n\r\n                    dates: [],\r\n                    datesLabels: [],\r\n                    modal: false,\r\n                    modalDatePicker: false,\r\n\r\n                    // raw_weeks: [\r\n                    //     {\r\n                    //         dates: [],\r\n                    //         modal: false,\r\n                    //         blockDate: null,\r\n                    //     },\r\n                    // ],\r\n                },\r\n                mounted() {\r\n                    this.initBlockDates();\r\n                    document.querySelector(\"#setweeks-loader\").style.display = \"none\";\r\n                    document.querySelector(\"#setweeks\").style.display = \"block\";\r\n                },\r\n                computed: {\r\n                    // weeks() {\r\n                    //     for (let i = 0; i < this.raw_weeks.length; i++) {\r\n                    //         let week = this.raw_weeks[i];\r\n                    //         if (i == 0) {\r\n                    //             let start_weeks = this.weeks_started_at;\r\n                    //             week.weekstart = start_weeks;\r\n                    //             week.weekend = this.get_end_week(this.weeks_started_at);\r\n                    //         } else {\r\n                    //             week.weekstart = this.get_start_week(this.raw_weeks[i - 1].weekend);\r\n                    //             week.weekend = this.get_end_week(week.weekstart);\r\n                    //         }\r\n                    //     }\r\n                    //     return this.raw_weeks;\r\n                    // },\r\n\r\n                    // dateRangeText () {\r\n                    //     let dates_array = this.dates.map(date => new Date(date));\r\n                    //     dates_array.sort(this.sortDates);\r\n                    //     this.datesLabels = dates_array.map(date => this.formatDate(date));\r\n                    //     return this.datesLabels.join(' → ');\r\n                    // },\r\n\r\n                    dateRangeText() {\r\n                        return (i) => {\r\n                            // this.min_date = this.raw_weeks[i].dates[0];\r\n                            let dates_array = this.raw_weeks[i].dates.map((date) => new Date(date));\r\n                            // Se ordenan las fechas seleccionadas\r\n                            dates_array.sort(this.sortDates);\r\n\r\n                            dates_array = dates_array.map(date => this.formatDate(date));\r\n                            this.raw_weeks[i].weekstart = dates_array[0].split('/').reverse().join('-');\r\n                            this.raw_weeks[i].weekend = dates_array[1]\r\n                                ? dates_array[1].split('/').reverse().join('-')\r\n                                : this.raw_weeks[i].weekstart;\r\n\r\n                            // Se retorna el arreglo de fechas ordenado y formateado\r\n                            //return dates_array.map((date) => this.formatDate(date)).join(\" → \");\r\n                            return dates_array.join(\" → \");\r\n                            // return this.raw_weeks[i].dates.join(\" → \");\r\n                        };\r\n                    },\r\n                },\r\n                methods: {\r\n                    section_name(section) {\r\n                        let name = null;\r\n                        if (typeof(section.section_name) != 'undefined' && section.section_name.length > 0) {\r\n                            name = section.section_name;\r\n                        } else {\r\n                            name = section.name;\r\n                        }\r\n                        return name;\r\n                    },\r\n\r\n                    section_exist(section) {\r\n                        let exist = true;\r\n                        if (typeof(section) != 'undefined' && typeof(section.exists) != 'undefined' && section.exists == false) {\r\n                            exist = false;\r\n                        }\r\n                        return exist;\r\n                    },\r\n\r\n                    format_name(name, position) {\r\n                        return name + \" \" + (position + 1);\r\n                    },\r\n\r\n                    customFormatter(date) {\r\n                        let weeks_start_at = Moment(date).format('YYYY-MM-DD');\r\n                        return weeks_start_at;\r\n                    },\r\n\r\n                    add_week () {\r\n                        let start = this.get_start_week(new Date(this.get_last_date()));\r\n                        let end = this.get_end_week(new Date(start), 6);\r\n                        this.raw_weeks.push({\r\n                            name: this.strings.week,\r\n                            position: (this.raw_weeks.length + 1),\r\n                            weekstart: start,\r\n                            weekend: end,\r\n                            collapsabled: false,\r\n                            hours_dedications: 0,\r\n                            removable: true,\r\n                            sections: [],\r\n\r\n                            dates: [start, end],\r\n                            modal: false,\r\n                            blockDate: start,\r\n                        });\r\n                    },\r\n\r\n                    // add_week() {\r\n                    //     let start = this.get_start_week(new Date(this.get_last_date()));\r\n                    //     let end = this.get_end_week(new Date(start), 7);\r\n                    //\r\n                    //     // Se agrega una nueva semana al arreglo de semanas\r\n                    //     this.raw_weeks.push({\r\n                    //         dates: [start, end],\r\n                    //         modal: false,\r\n                    //         blockDate: start,\r\n                    //     });\r\n                    // },\r\n\r\n                    has_items(array) {\r\n                        return array.length > 0;\r\n                    },\r\n\r\n                    remove_week(week, index) {\r\n                        if (index == 0) {\r\n                            return null;\r\n                        }\r\n                        this.close_delete_confirm();\r\n                        for (let i = 0; i < week.sections.length; i++) {\r\n                            this.sections.push(week.sections[i]);\r\n                        }\r\n                        let element_index = this.raw_weeks.indexOf(week);\r\n                        this.raw_weeks.splice(element_index, 1);\r\n                    },\r\n\r\n                    ask_delete_confirm() {\r\n                        this.delete_confirm = true;\r\n                    },\r\n\r\n                    close_delete_confirm() {\r\n                        this.delete_confirm = false;\r\n                    },\r\n\r\n                    // get_start_week(pass_week) {\r\n                    //     let start_date = Moment(Moment(pass_week).add(1, 'days')).format('YYYY-MM-DD');\r\n                    //     return start_date;\r\n                    // },\r\n                    //\r\n                    // get_end_week(start_week) {\r\n                    //     let end_date = Moment(Moment(start_week).add(6, 'days')).format('YYYY-MM-DD');\r\n                    //     return end_date;\r\n                    // },\r\n\r\n                    get_date_next_day(requested_day, date, output_format = null) {\r\n                        requested_day = requested_day.toLowerCase();\r\n                        let current_day = Moment(date).format('dddd').toLowerCase();\r\n                        while (current_day != requested_day) {\r\n                            date = Moment(date).add(1, 'days');\r\n                            current_day = Moment(date).format('dddd').toLowerCase();\r\n                        }\r\n                        if (output_format) {\r\n                            date = date.format(output_format);\r\n                        } else {\r\n                            if (typeof(date) != 'number') {\r\n                                date = parseInt(date.format(\"x\"));\r\n                            }\r\n                        }\r\n                        return date;\r\n                    },\r\n\r\n                    position(index) {\r\n                        index++;\r\n                        return `${index} - `;\r\n                    },\r\n\r\n                    save_changes() {\r\n                        console.log(this.raw_weeks);\r\n                        this.save_successful = false;\r\n                        this.error_messages = [];\r\n                        if (this.empty_weeks()) {\r\n                            this.saving_loader = false;\r\n                            Alertify.error(this.strings.error_empty_week);\r\n                            this.error_messages.push(this.strings.error_empty_week);\r\n                            return false;\r\n                        }\r\n                        if (this.weeks_deleted_from_course()) {\r\n                            this.saving_loader = false;\r\n                            this.error_messages.push(this.strings.error_section_removed);\r\n                            return false;\r\n                        }\r\n\r\n                        Alertify.confirm(this.strings.save_warning_content,\r\n                                () => {\r\n                                    this.saving_loader = true;\r\n                                    let weeks = this.raw_weeks;\r\n                                    // weeks[0].weekstart = Moment(weeks[0].weekstart).format(\"YYYY-MM-DD\");\r\n                                    let data = {\r\n                                        action: \"saveconfigweek\",\r\n                                        userid: this.userid,\r\n                                        courseid: this.courseid,\r\n                                        newinstance: this.new_group,\r\n                                        weeks: this.minify_query(weeks), // Stringify is a hack to clone object :D\r\n                                        url: window.location.href,\r\n                                    };\r\n                                    Axios({\r\n                                        method: 'get',\r\n                                        url: M.cfg.wwwroot + \"/local/fliplearning/ajax.php\",\r\n                                        params: data,\r\n                                    }).then((response) => {\r\n                                        if (response.status == 200 && response.data.ok) {\r\n                                            console.log(response.data.data.settings);\r\n                                            this.settings = response.data.data.settings;\r\n                                            Alertify.success(this.strings.save_successful);\r\n                                            this.save_successful = true;\r\n                                        } else {\r\n                                            Alertify.error(this.strings.error_network);\r\n                                            this.error_messages.push(this.strings.error_network);\r\n                                        }\r\n                                    }).catch((e) => {\r\n                                        Alertify.error(this.strings.error_network);\r\n                                        this.error_messages.push(this.strings.error_network);\r\n                                    }).finally(() => {\r\n                                        this.saving_loader = false;\r\n                                    });\r\n                                },\r\n                                () => { // ON CANCEL\r\n                                    this.saving_loader = false;\r\n                                    Alertify.warning(this.strings.cancel_action);\r\n                                }).set({ title: this.strings.save_warning_title })\r\n                            .set({ labels: { cancel: this.strings.confirm_cancel, ok: this.strings.confirm_ok } });\r\n                    },\r\n\r\n                    minify_query(weeks) {\r\n                        var minify = [];\r\n                        weeks.forEach(week => {\r\n                            var wk = new Object();\r\n                            wk.h = week.hours_dedications;\r\n                            wk.s = week.weekstart;\r\n                            wk.e = week.weekend;\r\n                            wk.sections = [];\r\n                            week.sections.forEach(section => {\r\n                                var s = new Object();\r\n                                s.sid = section.sectionid;\r\n                                wk.sections.push(s);\r\n                            });\r\n                            minify.push(wk);\r\n                        });\r\n                        return JSON.stringify(minify);\r\n                    },\r\n\r\n                    empty_weeks() {\r\n                        if (this.raw_weeks.length >= 2 && this.raw_weeks[0].sections.length < 1) {\r\n                            return true;\r\n                        }\r\n                        for (let i = 0; i < this.raw_weeks.length; i++) {\r\n                            if (i > 0 && this.raw_weeks[i].sections.length <= 0) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n\r\n                    weeks_deleted_from_course() {\r\n                        for (let week_position = 0; week_position < this.raw_weeks.length; week_position++) {\r\n                            for (let section_position = 0; section_position < this.raw_weeks[week_position].sections.length; section_position++) {\r\n                                if (!this.section_exist(this.raw_weeks[week_position].sections[section_position])) {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n\r\n                    exists_mistakes() {\r\n                        let exists_mistakes = this.error_messages.length > 0;\r\n                        return exists_mistakes;\r\n                    },\r\n\r\n                    change_collapsabled(index) {\r\n                        this.raw_weeks[index].collapsabled = !this.raw_weeks[index].collapsabled;\r\n                    },\r\n\r\n                    course_finished() {\r\n                        let finished = false;\r\n                        let last = this.raw_weeks.length - 1;\r\n                        let end = Moment(this.raw_weeks[last].dates[1]).format(\"X\");\r\n                        let now = Moment().format(\"X\");\r\n                        if (now > end) {\r\n                            finished = true;\r\n                        } else {\r\n                            finished = false;\r\n                        }\r\n                        return finished;\r\n                    },\r\n\r\n                    get_settings_status() {\r\n                        let visible = true;\r\n                        Object.keys(this.settings).map(key => {\r\n                            if (!this.settings[key]) {\r\n                                visible = false;\r\n                            }\r\n                        });\r\n                        let status = visible ? this.strings.tw_plugin_visible : this.strings.tw_plugin_hidden;\r\n                        return status;\r\n                    },\r\n\r\n                    sortDates (a, b) {\r\n                        return b.getTime() > a.getTime() ? -1 : b.getTime() < a.getTime() ? 1 : 0;\r\n                    },\r\n\r\n                    formatDate (date) {\r\n                        const year = date.getUTCFullYear();\r\n                        const month_number = date.getUTCMonth() + 1;\r\n                        const month = month_number < 10 ? `0${month_number}` : month_number;\r\n                        const day_number = date.getUTCDate();\r\n                        const day = day_number < 10 ? `0${day_number}` : day_number;\r\n                        return `${day}/${month}/${year}`;\r\n                    },\r\n\r\n                    get_help_content() {\r\n                        let help_contents = [];\r\n                        let help = new Object();\r\n                        help.title = this.strings.help_title;\r\n                        help.description = this.strings.help_description;\r\n                        help_contents.push(help);\r\n                        return help_contents;\r\n                    },\r\n\r\n                    get_start_week(pass_week) {\r\n                        // Se agrega un día a partir de la fecha final del rango anterior\r\n                        let start_weeks = new Date(pass_week.setDate(pass_week.getDate() + 1));\r\n                        // Convertimos la fecha a un formato permitido por el datepicker\r\n                        return start_weeks.toISOString().substr(0, 10);\r\n                    },\r\n\r\n                    get_end_week(start_week, days) {\r\n                        // Establecemos la fecha final (una semana a partir de la fecha inicial)\r\n                        let end_date = new Date(start_week.setDate(start_week.getDate() + days));\r\n                        // Convertimos la fecha a un formato permitido por el datepicker\r\n                        return end_date.toISOString().substr(0, 10);\r\n                    },\r\n\r\n                    get_last_date() {\r\n                        return this.raw_weeks[this.raw_weeks.length - 1].dates[\r\n                            this.raw_weeks[this.raw_weeks.length - 1].dates.length === 1 ? 0 : 1\r\n                        ];\r\n                    },\r\n\r\n                    saveWeek(index) {\r\n                        // Cerrar el modal\r\n                        this.raw_weeks[index].modal = false;\r\n\r\n                        // Recalcular las siguientes fechas con un rango de siete días\r\n                        for (let i = index + 1; i < this.raw_weeks.length; i++) {\r\n\r\n                            let dates_array = this.raw_weeks[i].dates.map((date) => new Date(date));\r\n                            let diffDays = 0;\r\n\r\n                            if(dates_array.length > 1){\r\n                                const diffTime = Math.abs(dates_array[0] - dates_array[1]);\r\n                                diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n                            }\r\n\r\n                            // Ordenamos las fechas de la semana seleccionada\r\n                            let dates_aux = this.raw_weeks[i-1].dates.map((date) => new Date(date));\r\n                            dates_aux.sort(this.sortDates);\r\n                            let new_last_dates = dates_aux.map((date) => date.toISOString().substr(0, 10));\r\n\r\n                            let week = this.raw_weeks[i];\r\n                            let newLastDate = new_last_dates[ new_last_dates.length === 1 ? 0 : 1 ];\r\n                            let start = this.get_start_week(new Date(newLastDate));\r\n                            let end = this.get_end_week(new Date(start), diffDays);\r\n                            week.dates = [start, end];\r\n\r\n                            // Actualizar blockDate\r\n                            //let ends = this.get_end_week(new Date(this.raw_weeks[i - 1].weekend), 1);\r\n                            this.raw_weeks[i].blockDate = this.get_end_week(new Date(this.raw_weeks[i - 1].weekend), 1);\r\n                            // console.log(this.raw_weeks[i]);\r\n                        }\r\n                    },\r\n\r\n                    initBlockDates() {\r\n                        if (this.raw_weeks.length > 1) {\r\n                            for (let i = 1; i < this.raw_weeks.length; i++) {\r\n                                this.raw_weeks[i].blockDate = this.get_end_week(new Date(this.raw_weeks[i - 1].weekend), 1);\r\n                            }\r\n                        }\r\n                        // console.log(this.raw_weeks);\r\n                    },\r\n                }\r\n            });\r\n        }\r\n\r\n        // function add_collapsabled_property_to_weeks(content) {\r\n        //     for (let i = 0; i < content.weeks.length; i++) {\r\n        //         let week = content.weeks[i];\r\n        //         if (typeof(week.collapsabled) == \"undefined\") {\r\n        //             week.collapsabled = false;\r\n        //         }\r\n        //     }\r\n        //     return content;\r\n        // }\r\n\r\n        return {\r\n            init: init\r\n        };\r\n    });"],"file":"setweeks.min.js"}