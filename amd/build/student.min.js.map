{"version":3,"sources":["../src/student.js"],"names":["define","Vue","Vuetify","Axios","Moment","MomentTimezone","Pagination","ChartStatic","PageHeader","ModulesForm","HelpDialog","init","content","use","component","vue","delimiters","el","vuetify","data","strings","groups","userid","courseid","timezone","render_has","profile_render","loading","modules_dialog","errors","indicators","weeks_session_colors","modules_access_colors","sessions_evolution_colors","user_grades_colors","user","weeks_sessions","sessions","sessions_evolution_data","user_grades_categories","user_grades_data","course_grades_data","selected_sections","help_dialog","help_contents","pluginSectionName","modules_access_chart","weeks_session_chart","sessions_evolution_chart","user_grades_chart","beforeMount","set_modules_in_sections","calculate_sessions_evolution","calculate_user_grades","mounted","document","querySelector","style","display","methods","get_help_content","contents","title","section_help_title","description","section_help_description","sectionsMap","Map","sectionid","cms","forEach","cm","section","has","set","get","push","sections","modules","build_modules_access_chart","chart","type","backgroundColor","fontFamily","text","colors","xAxis","yAxis","allowDecimals","enabled","modules_amount","tooltip","shared","useHTML","formatter","module_text","capitalizeFirstLetter","modules_label","points","color","key","y","modules_details","plotOptions","series","cursor","point","events","click","open_modules_modal","x","saveInteraction","legend","colorByPoint","name","modules_access_chart_series_viewed","viewed","modules_access_chart_series_complete","complete","modules_access_chart_series_total","total","build_weeks_session_chart","categories","weeks","reversed","colorAxis","min","minColor","maxColor","layout","verticalAlign","days","xCategoryName","get_point_category_name","yCategoryName","label","sessions_text","value","borderWidth","borderColor","build_sessions_evolution_chart","zoomType","sessions_evolution_chart_xaxis1","sessions_evolution_chart_xaxis2","opposite","date_label","calculate_timezone_date_string","text1","get_sessions_evolution_tooltip","text2","build_user_grades_chart","crosshair","max","labels","format","user_grades_chart_yaxis","itemname","position","item","gradeitems","header","footer","user_grades_chart_view_activity","body","gradecount","user_grades_chart_tooltip_no_graded","get_user_grades_tooltip","url","M","cfg","wwwroot","itemmodule","coursemoduleid","window","open","sessions_data","time_data","sumtime","sumsessions","time","timestamp","session","start","duration","sessions_evolution_chart_legend1","sessions_evolution_chart_legend2","course_grades","user_grades","user_grade","user_name","firstname","finalgrade","grademax","average_percentage","user_grades_chart_legend","dat","weekday","monthday","month","tz","zone","day","date","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","getDay","getDate","getMonth","getHours","getMinutes","getSeconds","weekdays","shortMonths","dimension","isY","axis","sessions_prefix","time_prefix","colorIndex","convert_time","serie_name","average","isInt","toFixed","module","interactions","user_cm","id","get_picture_url","get_user_fullname","lastname","get_username","username","see_profile","get_progress_percentage","progress_percentage","get_progress_message","finished_label","finished_resources","of_conector","h","hours_short","m","minutes_short","s","seconds_short","hours","Math","floor","minutes","seconds","get_student_grade","grade","coursegrade","maxgrade","student_grade","max_grade","update_modules_dialog","n","string","charAt","toUpperCase","slice","openChartHelp","modules_access_help_title","modules_access_help_description_p1","modules_access_help_description_p2","modules_access_help_description_p3","weeks_session_help_title","weeks_session_help_description_p1","weeks_session_help_description_p2","sessions_evolution_help_title","sessions_evolution_help_description_p1","sessions_evolution_help_description_p2","sessions_evolution_help_description_p3","user_grades_help_title","user_grades_help_description_p1","user_grades_help_description_p2","user_grades_help_description_p3","length","interaction","target","interactiontype","action","pluginsection","location","href","method","params","then","catch","update_help_dialog","get_timezone","information","change_timezone"],"mappings":"AAAAA,OAAM,8BAAC,CAAC,wBAAD,CACC,4BADD,CAEC,0BAFD,CAGC,2BAHD,CAIC,mCAJD,CAKC,+BALD,CAMC,gCAND,CAOC,+BAPD,CAQC,gCARD,CASC,+BATD,CAAD,CAWF,SAASC,CAAT,CAAcC,CAAd,CAAuBC,CAAvB,CAA8BC,CAA9B,CAAsCC,CAAtC,CAAsDC,CAAtD,CAAkEC,CAAlE,CAA+EC,CAA/E,CAA2FC,CAA3F,CAAwGC,CAAxG,CAAoH,CAChH,aAkkBA,MAAO,CACHC,IAAI,CAjkBR,SAAcC,CAAd,CAAuB,CAEnBX,CAAG,CAACY,GAAJ,CAAQX,CAAR,EACAD,CAAG,CAACa,SAAJ,CAAc,YAAd,CAA4BR,CAA5B,EACAL,CAAG,CAACa,SAAJ,CAAc,OAAd,CAAuBP,CAAvB,EACAN,CAAG,CAACa,SAAJ,CAAc,YAAd,CAA4BN,CAA5B,EACAP,CAAG,CAACa,SAAJ,CAAc,aAAd,CAA6BL,CAA7B,EACAR,CAAG,CAACa,SAAJ,CAAc,YAAd,CAA4BJ,CAA5B,EACA,GAAIK,CAAAA,CAAG,CAAG,GAAId,CAAAA,CAAJ,CAAQ,CACde,UAAU,CAAE,CAAC,IAAD,CAAO,IAAP,CADE,CAEdC,EAAE,CAAE,kBAFU,CAGdC,OAAO,CAAE,GAAIhB,CAAAA,CAHC,CAIdiB,IAJc,gBAIP,CACH,MAAO,CACHC,OAAO,CAAER,CAAO,CAACQ,OADd,CAEHC,MAAM,CAAET,CAAO,CAACS,MAFb,CAGHC,MAAM,CAAEV,CAAO,CAACU,MAHb,CAIHC,QAAQ,CAAEX,CAAO,CAACW,QAJf,CAKHC,QAAQ,CAAEZ,CAAO,CAACY,QALf,CAMHC,UAAU,CAAEb,CAAO,CAACc,cANjB,CAOHC,OAAO,GAPJ,CAQHC,cAAc,GARX,CASHC,MAAM,CAAE,EATL,CAWHC,UAAU,CAAElB,CAAO,CAACkB,UAXjB,CAYHC,oBAAoB,CAAEnB,CAAO,CAACmB,oBAZ3B,CAaHC,qBAAqB,CAAEpB,CAAO,CAACoB,qBAb5B,CAcHC,yBAAyB,CAAErB,CAAO,CAACqB,yBAdhC,CAeHC,kBAAkB,CAAEtB,CAAO,CAACsB,kBAfzB,CAgBHC,IAAI,CAAEvB,CAAO,CAACkB,UAAR,CAAmBK,IAhBtB,CAiBHC,cAAc,CAAExB,CAAO,CAACkB,UAAR,CAAmBO,QAjBhC,CAkBHC,uBAAuB,CAAE,EAlBtB,CAmBHC,sBAAsB,CAAE,EAnBrB,CAoBHC,gBAAgB,CAAE,EApBf,CAqBHC,kBAAkB,CAAE,EArBjB,CAsBHC,iBAAiB,CAAE,EAtBhB,CAwBHC,WAAW,GAxBR,CAyBHC,aAAa,CAAE,EAzBZ,CA2BHC,iBAAiB,CAAE,iBA3BhB,CA4BHC,oBAAoB,CAAE,sBA5BnB,CA6BHC,mBAAmB,CAAE,qBA7BlB,CA8BHC,wBAAwB,CAAE,0BA9BvB,CA+BHC,iBAAiB,CAAE,mBA/BhB,CAiCV,CAtCa,CAuCdC,WAvCc,uBAuCA,CACV,KAAKC,uBAAL,GACA,KAAKC,4BAAL,GACA,KAAKC,qBAAL,EACH,CA3Ca,CA4CdC,OA5Cc,mBA4CJ,CACNC,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,EAAkDC,KAAlD,CAAwDC,OAAxD,CAAkE,MAAlE,CACAH,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC,KAA3C,CAAiDC,OAAjD,CAA2D,OAC9D,CA/Ca,CAgDdC,OAAO,CAAE,CACLC,gBADK,4BACc,CACf,GAAIC,CAAAA,CAAQ,CAAG,CACD,CACVC,KAAK,CAAE,KAAK1C,OAAL,CAAa2C,kBADV,CAEVC,WAAW,CAAE,KAAK5C,OAAL,CAAa6C,wBAFhB,CADC,CAAf,CAKA,MAAOJ,CAAAA,CACV,CARI,CAULV,uBAVK,mCAUqB,IAClBe,CAAAA,CAAW,CAAG,GAAIC,CAAAA,GADA,CAElBC,CAAS,CAAG,CAFM,CAGtB,KAAKtC,UAAL,CAAgBuC,GAAhB,CAAoBC,OAApB,CAA4B,SAAAC,CAAE,CAAI,CAC9BH,CAAS,EAAUG,CAAE,CAACC,OAAtB,CACA,GAAI,CAACN,CAAW,CAACO,GAAZ,CAAgBL,CAAhB,CAAL,CAAiC,CAC7BF,CAAW,CAACQ,GAAZ,CAAgBN,CAAhB,CAA2B,CAACG,CAAD,CAA3B,CACH,CAFD,IAEO,CACHL,CAAW,CAACS,GAAZ,CAAgBP,CAAhB,EAA2BQ,IAA3B,CAAgCL,CAAhC,CACH,CACJ,CAPD,EAQA,KAAKzC,UAAL,CAAgB+C,QAAhB,CAAyBP,OAAzB,CAAiC,SAAAE,CAAO,CAAI,CACxCJ,CAAS,EAAUI,CAAO,CAACJ,SAA3B,CACAI,CAAO,CAACJ,SAAR,CAAoBA,CAApB,CACAI,CAAO,CAACM,OAAR,CAAmBZ,CAAW,CAACO,GAAZ,CAAgBL,CAAhB,CAAD,CAA+BF,CAAW,CAACS,GAAZ,CAAgBP,CAAhB,CAA/B,CAA4D,EACjF,CAJD,CAKH,CA1BI,CA4BLW,0BA5BK,sCA4BwB,CACzB,GAAIC,CAAAA,CAAK,GAAT,CACAA,CAAK,CAACA,KAAN,CAAc,CACVC,IAAI,CAAE,KADI,CAEVC,eAAe,CAAE,IAFP,CAGVzB,KAAK,CAAE,CAAE0B,UAAU,CAAE,SAAd,CAHG,CAAd,CAKAH,CAAK,CAAClB,KAAN,CAAc,CAAEsB,IAAI,CAAE,IAAR,CAAd,CACAJ,CAAK,CAACK,MAAN,CAAe,KAAKrD,qBAApB,CACAgD,CAAK,CAACM,KAAN,CAAc,CACNL,IAAI,CAAE,UADA,CADd,CAIAD,CAAK,CAACO,KAAN,CAAc,CACVC,aAAa,GADH,CAEV1B,KAAK,CAAE,CACH2B,OAAO,GADJ,CAEHL,IAAI,CAAE,KAAKhE,OAAL,CAAasE,cAFhB,CAFG,CAAd,CAOAV,CAAK,CAACW,OAAN,CAAgB,CACZC,MAAM,GADM,CAEZC,OAAO,GAFK,CAGZC,SAAS,CAAE,oBAAW,CAElB,GAAIC,CAAAA,CAAW,CAAGhF,CAAG,CAACiF,qBAAJ,CAA0BjF,CAAG,CAACK,OAAJ,CAAY6E,aAAtC,CAAlB,CACA,MAAO,UAAYF,CAAZ,kCACkB,KAAKG,MAAL,CAAY,CAAZ,EAAeC,KADjC,sBAEK,KAAKD,MAAL,CAAY,CAAZ,EAAeE,GAFpB,CAE0B,QAF1B,CAEqC,KAAKC,CAF1C,gBAGStF,CAAG,CAACK,OAAJ,CAAYkF,eAHrB,CAGuC,UACjD,CAVW,CAAhB,CAYAtB,CAAK,CAACuB,WAAN,CAAoB,CACZC,MAAM,CAAE,CACJC,MAAM,CAAE,SADJ,CAEJC,KAAK,CAAE,CACHC,MAAM,CAAE,CACJC,KAAK,CAAE,gBAAW,CACd7F,CAAG,CAAC8F,kBAAJ,CAAuB,KAAKC,CAA5B,EAEA/F,CAAG,CAACgG,eAAJ,CACIhG,CAAG,CAAC+B,oBADR,CAEI,QAFJ,CAGI,0BAHJ,CAII,EAJJ,CAMH,CAVG,CADL,CAFH,CADI,CAApB,CAmBAkC,CAAK,CAACgC,MAAN,CAAe,CACPvB,OAAO,GADA,CAnBf,CAsBAT,CAAK,CAACwB,MAAN,CAAe,CAAC,CACZS,YAAY,GADA,CAEZ9F,IAAI,CAAE,CACF,CAAE+F,IAAI,CAAE,KAAK9F,OAAL,CAAa+F,kCAArB,CAAyDd,CAAC,CAAE,KAAKlE,IAAL,CAAUkC,GAAV,CAAc+C,MAA1E,CADE,CAEF,CAAEF,IAAI,CAAE,KAAK9F,OAAL,CAAaiG,oCAArB,CAA2DhB,CAAC,CAAE,KAAKlE,IAAL,CAAUkC,GAAV,CAAciD,QAA5E,CAFE,CAGF,CAAEJ,IAAI,CAAE,KAAK9F,OAAL,CAAamG,iCAArB,CAAwDlB,CAAC,CAAE,KAAKlE,IAAL,CAAUkC,GAAV,CAAcmD,KAAzE,CAHE,CAFM,CAAD,CAAf,CAQA,MAAOxC,CAAAA,CACV,CA1FI,CA4FLyC,yBA5FK,qCA4FuB,CACxB,GAAIzC,CAAAA,CAAK,GAAT,CACAA,CAAK,CAAClB,KAAN,CAAc,CAAEsB,IAAI,CAAE,IAAR,CAAd,CACAJ,CAAK,CAACA,KAAN,CAAc,CACVC,IAAI,CAAE,SADI,CAEVC,eAAe,CAAE,IAFP,CAGVzB,KAAK,CAAE,CAAE0B,UAAU,CAAE,SAAd,CAHG,CAAd,CAKAH,CAAK,CAACM,KAAN,CAAc,CACVoC,UAAU,CAAE,KAAKtG,OAAL,CAAauG,KADf,CAAd,CAGA3C,CAAK,CAACO,KAAN,CAAc,CACVmC,UAAU,CAAE,KAAKtF,cAAL,CAAoBsF,UADtB,CAEV5D,KAAK,CAAE,IAFG,CAGV8D,QAAQ,GAHE,CAAd,CAKA5C,CAAK,CAAC6C,SAAN,CAAkB,CACdC,GAAG,CAAE,CADS,CAEdC,QAAQ,CAAE,KAAKhG,oBAAL,CAA0B,CAA1B,CAFI,CAGdiG,QAAQ,CAAE,KAAKjG,oBAAL,CAA0B,CAA1B,CAHI,CAAlB,CAKAiD,CAAK,CAACgC,MAAN,CAAe,CACXiB,MAAM,CAAE,YADG,CAEXC,aAAa,CAAE,QAFJ,CAAf,CAIAlD,CAAK,CAACW,OAAN,CAAgB,CACZE,OAAO,GADK,CAEZC,SAAS,CAAE,oBAAW,IACdqC,CAAAA,CAAI,CAAGpH,CAAG,CAACqB,cAAJ,CAAmBuF,KAAnB,CAAyB,KAAKjB,KAAL,CAAWL,CAApC,EAAuC,KAAKK,KAAL,CAAWI,CAAlD,GAAwD,EADjD,CAEdsB,CAAa,CAAGrH,CAAG,CAACsH,uBAAJ,CAA4B,KAAK3B,KAAjC,CAAwC,GAAxC,CAFF,CAGd4B,CAAa,CAAGvH,CAAG,CAACsH,uBAAJ,CAA4B,KAAK3B,KAAjC,CAAwC,GAAxC,CAHF,CAId6B,CAAK,CAAGxH,CAAG,CAACiF,qBAAJ,CAA0BjF,CAAG,CAACK,OAAJ,CAAYoH,aAAtC,CAJM,CAKlB,MAAO,UAAYF,CAAZ,CAA4B,GAA5B,CAAkCF,CAAlC,mCACmBrH,CAAG,CAACgB,oBAAJ,CAAyB,CAAzB,CADnB,CACiD,iBADjD,CAEHwG,CAFG,CAEK,IAFL,CAEY,KAAK7B,KAAL,CAAW+B,KAFvB,gBAGSN,CAHT,CAGgB,UAC1B,CAXW,CAAhB,CAaAnD,CAAK,CAACwB,MAAN,CAAe,CAAC,CACZkC,WAAW,CAAE,CADD,CAEZC,WAAW,CAAE,SAFD,CAGZxH,IAAI,CAAE,KAAKiB,cAAL,CAAoBjB,IAHd,CAAD,CAAf,CAKA,MAAO6D,CAAAA,CACV,CAxII,CA0IL4D,8BA1IK,0CA0I4B,CAC7B,GAAI5D,CAAAA,CAAK,GAAT,CACAA,CAAK,CAACA,KAAN,CAAc,CACV6D,QAAQ,CAAE,GADA,CAEV3D,eAAe,CAAE,IAFP,CAGVzB,KAAK,CAAE,CAAE0B,UAAU,CAAE,SAAd,CAHG,CAAd,CAKAH,CAAK,CAAClB,KAAN,CAAc,CAAEsB,IAAI,CAAE,IAAR,CAAd,CACAJ,CAAK,CAACK,MAAN,CAAe,KAAKpD,yBAApB,CACA+C,CAAK,CAACM,KAAN,CAAc,CACNL,IAAI,CAAE,UADA,CADd,CAIAD,CAAK,CAACO,KAAN,CAAc,CAAC,CACXC,aAAa,GADF,CAEX1B,KAAK,CAAE,CAAEsB,IAAI,CAAE,KAAKhE,OAAL,CAAa0H,+BAArB,CAFI,CAAD,CAGX,CACChF,KAAK,CAAE,CAAEsB,IAAI,CAAE,KAAKhE,OAAL,CAAa2H,+BAArB,CADR,CAECC,QAAQ,GAFT,CAHW,CAAd,CAOAhE,CAAK,CAACW,OAAN,CAAgB,CACZC,MAAM,GADM,CAEZC,OAAO,GAFK,CAGZC,SAAS,CAAE,oBAAW,IACdmD,CAAAA,CAAU,CAAGlI,CAAG,CAACmI,8BAAJ,CAAmC,KAAKpC,CAAxC,CADC,CAEdqC,CAAK,CAAI,KAAKjD,MAAL,CAAY,CAAZ,CAAD,CAAmBnF,CAAG,CAACqI,8BAAJ,CAAmC,KAAKlD,MAAL,CAAY,CAAZ,CAAnC,CAAnB,CAAwE,EAFlE,CAGdmD,CAAK,CAAI,KAAKnD,MAAL,CAAY,CAAZ,CAAD,CAAmBnF,CAAG,CAACqI,8BAAJ,CAAmC,KAAKlD,MAAL,CAAY,CAAZ,CAAnC,CAAnB,CAAwE,EAHlE,CAIlB,uBAAiB+C,CAAjB,yBAA2CE,CAA3C,SAAmDE,CAAnD,CACH,CARW,CAAhB,CAUArE,CAAK,CAACwB,MAAN,CAAe,KAAKlE,uBAApB,CACA,MAAO0C,CAAAA,CACV,CAzKI,CA2KLsE,uBA3KK,mCA2KqB,CACtB,GAAItE,CAAAA,CAAK,GAAT,CACAA,CAAK,CAACA,KAAN,CAAc,CACVC,IAAI,CAAE,QADI,CAEVC,eAAe,CAAE,IAFP,CAGVzB,KAAK,CAAE,CAAE0B,UAAU,CAAE,SAAd,CAHG,CAAd,CAKAH,CAAK,CAAClB,KAAN,CAAc,CAAEsB,IAAI,CAAE,IAAR,CAAd,CACAJ,CAAK,CAACK,MAAN,CAAe,KAAKnD,kBAApB,CACA8C,CAAK,CAACM,KAAN,CAAc,CACNiE,SAAS,GADH,CAEN7B,UAAU,CAAE,KAAKnF,sBAFX,CADd,CAKAyC,CAAK,CAACO,KAAN,CAAc,CACVC,aAAa,GADH,CAEVgE,GAAG,CAAE,GAFK,CAGVC,MAAM,CAAE,CACJC,MAAM,CAAE,WADJ,CAHE,CAMV5F,KAAK,CAAE,CAAEsB,IAAI,CAAE,KAAKhE,OAAL,CAAauI,uBAArB,CANG,CAAd,CAQA3E,CAAK,CAACW,OAAN,CAAgB,CACZC,MAAM,GADM,CAEZC,OAAO,GAFK,CAGZC,SAAS,CAAE,oBAAW,IACd8D,CAAAA,CAAQ,CAAG,KAAK9C,CADF,CAEd+C,CAAQ,CAAG,KAAK3D,MAAL,CAAY,CAAZ,EAAeQ,KAAf,CAAqBI,CAFlB,CAGdgD,CAAI,CAAG/I,CAAG,CAACoB,IAAJ,CAAS4H,UAAT,CAAoBF,CAApB,CAHO,CAIdG,CAAM,kBAAaJ,CAAb,iBAJQ,CAKdK,CAAM,mBAAclJ,CAAG,CAACK,OAAJ,CAAY8I,+BAA1B,kBALQ,CAMdC,CAAI,CAAG,EANO,CAOlB,GAAuB,CAAnB,EAAAL,CAAI,CAACM,UAAT,CAA0B,CACtBD,CAAI,CAAGpJ,CAAG,CAACK,OAAJ,CAAYiJ,mCACtB,CAFD,IAEO,IACClB,CAAAA,CAAK,CAAI,KAAKjD,MAAL,CAAY,CAAZ,CAAD,CAAmBnF,CAAG,CAACuJ,uBAAJ,CAA4B,KAAKpE,MAAL,CAAY,CAAZ,CAA5B,CAA4C4D,CAA5C,CAAnB,CAAuE,EADhF,CAECT,CAAK,CAAI,KAAKnD,MAAL,CAAY,CAAZ,CAAD,CAAmBnF,CAAG,CAACuJ,uBAAJ,CAA4B,KAAKpE,MAAL,CAAY,CAAZ,CAA5B,CAA4C4D,CAA5C,CAAnB,CAAuE,EAFhF,CAGHK,CAAI,WAAMhB,CAAN,SAAcE,CAAd,SAAsBY,CAAtB,CACP,CACD,gBAAUD,CAAV,SAAmBG,CAAnB,CACH,CAlBW,CAAhB,CAoBAnF,CAAK,CAACuB,WAAN,CAAoB,CAChBC,MAAM,CAAE,CACJC,MAAM,CAAE,SADJ,CAEJC,KAAK,CAAE,CACHC,MAAM,CAAE,CACJC,KAAK,CAAE,gBAAW,IACViD,CAAAA,CAAQ,CAAG,KAAK/C,CADN,CAEVgD,CAAI,CAAG/I,CAAG,CAACoB,IAAJ,CAAS4H,UAAT,CAAoBF,CAApB,CAFG,CAGVU,CAAG,WAAMC,CAAC,CAACC,GAAF,CAAMC,OAAZ,iBAA2BZ,CAAI,CAACa,UAAhC,yBAA0Db,CAAI,CAACc,cAA/D,CAHO,CAIdC,MAAM,CAACC,IAAP,CAAYP,CAAZ,CAAiB,QAAjB,EAEAxJ,CAAG,CAACgG,eAAJ,CACIhG,CAAG,CAACkC,iBADR,CAEI,UAFJ,CAGI,YAHJ,CAII,EAJJ,CAMH,CAbG,CADL,CAFH,CADQ,CAApB,CAsBA+B,CAAK,CAACwB,MAAN,CAAe,KAAKhE,gBAApB,CACA,MAAOwC,CAAAA,CACV,CA5OI,CA8OL5B,4BA9OK,wCA8O0B,IACvB2H,CAAAA,CAAa,CAAG,EADO,CAEvBC,CAAS,CAAG,EAFW,CAGvBC,CAAO,CAAG,CAHa,CAIvBC,CAAW,CAAG,CAJS,CAKvBC,CAAI,CAAG,CALgB,CAMvBC,CAAS,CAAG,CANW,CAO3B,KAAKjJ,IAAL,CAAUE,QAAV,CAAmBiC,OAAnB,CAA2B,SAAA+G,CAAO,CAAI,CAClCD,CAAS,CAA2B,GAAxB,EAAOC,CAAO,CAACC,KAA3B,CACAH,CAAI,CAAG,CAAQE,CAAO,CAACE,QAAhB,CAA6B,EAApC,CACAN,CAAO,EAAIE,CAAX,CACAD,CAAW,GACXH,CAAa,CAACnG,IAAd,CAAmB,CAAEkC,CAAC,CAAEsE,CAAL,CAAgB/E,CAAC,CAAE6E,CAAnB,CAAnB,EACAF,CAAS,CAACpG,IAAV,CAAe,CAAEkC,CAAC,CAAEsE,CAAL,CAAgB/E,CAAC,CAAE4E,CAAnB,CAAf,CACH,CAPD,EAQA,KAAK3I,uBAAL,CAA+B,CAC3B,CAAE4E,IAAI,CAAE,KAAK9F,OAAL,CAAaoK,gCAArB,CAAuDjG,KAAK,CAAE,CAA9D,CAAiEpE,IAAI,CAAE4J,CAAvE,CAD2B,CAE3B,CAAE7D,IAAI,CAAE,KAAK9F,OAAL,CAAaqK,gCAArB,CAAuDlG,KAAK,CAAE,CAA9D,CAAiEpE,IAAI,CAAE6J,CAAvE,CAF2B,CAIlC,CAjQI,CAmQL3H,qBAnQK,iCAmQmB,IAChBqE,CAAAA,CAAU,CAAG,EADG,CAEhBgE,CAAa,CAAG,EAFA,CAGhBC,CAAW,CAAG,EAHE,CAIhBC,CAAU,CAAG,CAJG,CAKhBC,CAAS,CAAG,KAAK1J,IAAL,CAAU2J,SALN,CAMpB,GAAI,KAAK3J,IAAL,CAAU4H,UAAd,CAA0B,CACtB,KAAK5H,IAAL,CAAU4H,UAAV,CAAqBzF,OAArB,CAA6B,SAAAwF,CAAI,CAAI,CACjC8B,CAAU,CAA8B,GAA1B,EAAO9B,CAAI,CAACiC,UAAb,EAAyCjC,CAAI,CAACkC,QAA3D,CACAtE,CAAU,CAAC9C,IAAX,CAAgBkF,CAAI,CAACF,QAArB,EACA8B,CAAa,CAAC9G,IAAd,CAAmBkF,CAAI,CAACmC,kBAAxB,EACAN,CAAW,CAAC/G,IAAZ,CAAiBgH,CAAjB,CACH,CALD,EAMA,KAAKpJ,gBAAL,CAAwB,CACpB,CAAE0E,IAAI,CAAE2E,CAAR,CAAmB1K,IAAI,CAAEwK,CAAzB,CADoB,CAEpB,CAAEzE,IAAI,CAAE,KAAK9F,OAAL,CAAa8K,wBAArB,CAA+C/K,IAAI,CAAEuK,CAArD,CAFoB,CAAxB,CAIA,KAAKnJ,sBAAL,CAA8BmF,CACjC,CACJ,CAtRI,CAwRLwB,8BAxRK,yCAwR0BkC,CAxR1B,CAwRqC,CACtC,GAAIe,CAAAA,CAAJ,CAASC,CAAT,CAAkBC,CAAlB,CAA4BC,CAA5B,CAAmCnB,CAAnC,CACA,GAAI/K,CAAM,CAACmM,EAAP,CAAUC,IAAV,CAAe,KAAKhL,QAApB,CAAJ,CAAmC,CAC/B2K,CAAG,CAAG/L,CAAM,CAACgL,CAAD,CAAN,CAAkBmB,EAAlB,CAAqB,KAAK/K,QAA1B,CAAN,CACA4K,CAAO,CAAGD,CAAG,CAACM,GAAJ,EAAV,CACAJ,CAAQ,CAAGF,CAAG,CAACO,IAAJ,EAAX,CACAJ,CAAK,CAAGH,CAAG,CAACG,KAAJ,EAAR,CACAnB,CAAI,CAAGgB,CAAG,CAACzC,MAAJ,CAAW,UAAX,CACV,CAND,IAMO,CACH,GAAI6C,CAAAA,CAAE,CAAGI,IAAI,CAACC,cAAL,GAAsBC,eAAtB,GAAwCC,QAAjD,CACAX,CAAG,CAAG,GAAIY,CAAAA,IAAJ,CAAS3B,CAAT,CAAN,CACAgB,CAAO,CAAGD,CAAG,CAACa,MAAJ,EAAV,CACAX,CAAQ,CAAGF,CAAG,CAACc,OAAJ,EAAX,CACAX,CAAK,CAAGH,CAAG,CAACe,QAAJ,EAAR,CACA/B,CAAI,WAAMgB,CAAG,CAACgB,QAAJ,EAAN,aAAwBhB,CAAG,CAACiB,UAAJ,EAAxB,aAA4CjB,CAAG,CAACkB,UAAJ,EAA5C,cAAiEd,CAAjE,KACP,CACDH,CAAO,CAAG,KAAKhL,OAAL,CAAa4D,KAAb,CAAmBsI,QAAnB,CAA4BlB,CAA5B,CAAV,CACAE,CAAK,CAAG,KAAKlL,OAAL,CAAa4D,KAAb,CAAmBuI,WAAnB,CAA+BjB,CAA/B,CAAR,CACA,gBAAUF,CAAV,cAAsBE,CAAtB,aAA+BD,CAA/B,cAA4ClB,CAA5C,CACH,CA3SI,CA6SL9C,uBA7SK,kCA6SmB3B,CA7SnB,CA6S0B8G,CA7S1B,CA6SqC,CACtC,GAAIhH,CAAAA,CAAM,CAAGE,CAAK,CAACF,MAAnB,CACIiH,CAAG,CAAiB,GAAd,GAAAD,CADV,CAEIE,CAAI,CAAGlH,CAAM,CAACiH,CAAG,CAAG,OAAH,CAAa,OAAjB,CAFjB,CAGA,MAAOC,CAAAA,CAAI,CAAChG,UAAL,CAAgBhB,CAAK,CAAC+G,CAAG,CAAG,GAAH,CAAS,GAAb,CAArB,CACV,CAlTI,CAoTLrE,8BApTK,yCAoT0B1C,CApT1B,CAoTiC,CAClC,GAAItB,CAAAA,CAAI,CAAG,EAAX,CACI/C,CADJ,CACcsL,CADd,CAC+BC,CAD/B,CAC4CzC,CAD5C,CAEA,GAAwB,CAApB,EAAAzE,CAAK,CAACmH,UAAV,CAA2B,CACvBxL,CAAQ,CAAGqE,CAAK,CAACL,CAAjB,CACAsH,CAAe,CAAGjH,CAAK,CAACF,MAAN,CAAaU,IAA/B,CACA9B,CAAI,6BAAuBsB,CAAK,CAACP,KAA7B,oEACSwH,CADT,kBACiCtL,CADjC,SAEP,CALD,IAKO,CACHuL,CAAW,CAAGlH,CAAK,CAACF,MAAN,CAAaU,IAA3B,CACAiE,CAAI,CAAG,KAAK2C,YAAL,CAA4B,EAAV,CAAApH,CAAK,CAACL,CAAxB,CAAP,CACAjB,CAAI,6BAAuBsB,CAAK,CAACP,KAA7B,oEACSyH,CADT,wDAEMzC,CAFN,SAGP,CACD,MAAO/F,CAAAA,CACV,CApUI,CAsULkF,uBAtUK,kCAsUmB5D,CAtUnB,CAsU0BoD,CAtU1B,CAsUgC,IAC7BiE,CAAAA,CAAU,CAAGrH,CAAK,CAACF,MAAN,CAAaU,IADG,CAE7B0E,CAAU,CAAG,CAFgB,CAG7BG,CAAU,EAAUjC,CAAI,CAACiC,UAHI,CAI7BiC,CAAO,EAAUlE,CAAI,CAACkE,OAJO,CAK7BhC,CAAQ,EAAUlC,CAAI,CAACkC,QALM,CAMjCA,CAAQ,CAAG,KAAKiC,KAAL,CAAWjC,CAAX,EAAuBA,CAAvB,CAAkCA,CAAQ,CAACkC,OAAT,CAAiB,CAAjB,CAA7C,CACA,GAAwB,CAApB,EAAAxH,CAAK,CAACmH,UAAV,CAA2B,CACvBjC,CAAU,CAAG,KAAKqC,KAAL,CAAWlC,CAAX,EAAyBA,CAAzB,CAAsCA,CAAU,CAACmC,OAAX,CAAmB,CAAnB,CACtD,CAFD,IAEO,CACHtC,CAAU,CAAG,KAAKqC,KAAL,CAAWD,CAAX,EAAsBA,CAAtB,CAAgCA,CAAO,CAACE,OAAR,CAAgB,CAAhB,CAChD,CACD,kCAA2BxH,CAAK,CAACP,KAAjC,gEACa4H,CADb,kBACgCnC,CADhC,aAC8CI,CAD9C,SAEH,CApVI,CAsVLnF,kBAtVK,8BAsVgB,YACbhC,CAAQ,CAAG,KAAK/C,UAAL,CAAgB+C,QADd,CAEjBA,CAAQ,CAACP,OAAT,CAAiB,SAAAE,CAAO,CAAI,CACxBA,CAAO,CAACM,OAAR,CAAgBR,OAAhB,CAAwB,SAAA6J,CAAM,CAAI,CAC9BA,CAAM,CAAC7G,QAAP,IACA6G,CAAM,CAAC/G,MAAP,IACA+G,CAAM,CAACC,YAAP,CAAsB,CAAtB,CACA,GAAIC,CAAAA,CAAO,CAAG,CAAI,CAAClM,IAAL,CAAUkC,GAAV,CAAcS,OAAd,aAA2BqJ,CAAM,CAACG,EAAlC,EAAd,CACA,GAAID,CAAJ,CAAa,CACTF,CAAM,CAAC7G,QAAP,CAAkB+G,CAAO,CAAC/G,QAA1B,CACA6G,CAAM,CAAC/G,MAAP,CAAgBiH,CAAO,CAACjH,MAAxB,CACA+G,CAAM,CAACC,YAAP,CAAsBC,CAAO,CAACD,YACjC,CACJ,CAVD,CAWH,CAZD,EAcA,KAAKxM,cAAL,IACA,KAAKc,iBAAL,CAAyBmC,CAC5B,CAxWI,CA0WL0J,eA1WK,0BA0WWjN,CA1WX,CA0WmB,CACpB,gBAAUkJ,CAAC,CAACC,GAAF,CAAMC,OAAhB,gCAA8CpJ,CAA9C,WACH,CA5WI,CA8WLkN,iBA9WK,6BA8We,CAChB,gBAAU,KAAKrM,IAAL,CAAU2J,SAApB,aAAiC,KAAK3J,IAAL,CAAUsM,QAA3C,CACH,CAhXI,CAkXLC,YAlXK,wBAkXU,CACX,iBAAW,KAAKvM,IAAL,CAAUwM,QAArB,CACH,CApXI,CAsXLC,WAtXK,uBAsXS,IACNN,CAAAA,CAAE,CAAG,KAAKnM,IAAL,CAAUmM,EADT,CAEN/D,CAAG,CAAGC,CAAC,CAACC,GAAF,CAAMC,OAAN,CAAgB,oBAAhB,CAAuC4D,CAAvC,CAA4C,UAA5C,CAAyDvN,CAAG,CAACQ,QAF7D,CAGVsJ,MAAM,CAACC,IAAP,CAAYP,CAAZ,CACH,CA1XI,CA4XLsE,uBA5XK,mCA4XqB,CACtB,gBAAU,KAAK1M,IAAL,CAAU2M,mBAApB,MACH,CA9XI,CAgYLC,oBAhYK,gCAgYkB,CACnB,GAAIC,CAAAA,CAAc,CAAG,KAAK5N,OAAL,CAAa6N,kBAAlC,CACA,gBAAUD,CAAV,cAA6B,KAAK7M,IAAL,CAAUkC,GAAV,CAAciD,QAA3C,aAAuD,KAAKlG,OAAL,CAAa8N,WAApE,aAAmF,KAAK/M,IAAL,CAAUkC,GAAV,CAAcmD,KAAjG,CACH,CAnYI,CAqYLsG,YArYK,uBAqYQ3C,CArYR,CAqYc,CACfA,CAAI,EAAI,EAAR,CADe,GAEXgE,CAAAA,CAAC,CAAG,KAAK/N,OAAL,CAAagO,WAFN,CAGXC,CAAC,CAAG,KAAKjO,OAAL,CAAakO,aAHN,CAIXC,CAAC,CAAG,KAAKnO,OAAL,CAAaoO,aAJN,CAKXC,CAAK,CAAGC,IAAI,CAACC,KAAL,CAAWxE,CAAI,CAAG,IAAlB,CALG,CAMXyE,CAAO,CAAGF,IAAI,CAACC,KAAL,CAAYxE,CAAI,CAAG,IAAR,CAAgB,EAA3B,CANC,CAOX0E,CAAO,CAAGH,IAAI,CAACC,KAAL,CAAWxE,CAAI,CAAG,EAAlB,CAPC,CAQX/F,CARW,CASf,GAAa,CAAT,EAAAqK,CAAJ,CAAgB,CACZ,GAAe,CAAX,EAAAG,CAAJ,CAAkB,CACdxK,CAAI,WAAMqK,CAAN,SAAcN,CAAd,aAAmBS,CAAnB,SAA6BP,CAA7B,CACP,CAFD,IAEO,CACHjK,CAAI,WAAMqK,CAAN,SAAcN,CAAd,CACP,CACJ,CAND,IAMO,IAAgB,CAAX,EAAAS,CAAL,CAAoB,CACvB,GAAe,CAAX,EAAAC,CAAJ,CAAkB,CACdzK,CAAI,WAAMwK,CAAN,SAAgBP,CAAhB,aAAqBQ,CAArB,SAA+BN,CAA/B,CACP,CAFD,IAEO,CACHnK,CAAI,WAAMwK,CAAN,SAAgBP,CAAhB,CACP,CACJ,CANM,IAMA,CACHjK,CAAI,WAAMyK,CAAN,SAAgBN,CAAhB,CACP,CACD,MAAOnK,CAAAA,CACV,CA9ZI,CAgaL0K,iBAhaK,6BAgae,CAChB,GAAIC,CAAAA,CAAK,CAAG,KAAK5N,IAAL,CAAU6N,WAAtB,CACAD,CAAK,CAAChE,UAAN,EAA0BgE,CAAK,CAAChE,UAAhC,CACAgE,CAAK,CAACE,QAAN,EAAwBF,CAAK,CAACE,QAA9B,CAHgB,GAIZC,CAAAA,CAAa,CAAG,KAAKjC,KAAL,CAAW8B,CAAK,CAAChE,UAAjB,EAA+BgE,CAAK,CAAChE,UAArC,CAAkDgE,CAAK,CAAChE,UAAN,CAAiBmC,OAAjB,CAAyB,CAAzB,CAJtD,CAKZiC,CAAS,CAAG,KAAKlC,KAAL,CAAW8B,CAAK,CAACE,QAAjB,EAA6BF,CAAK,CAACE,QAAnC,CAA8CF,CAAK,CAACE,QAAN,CAAe/B,OAAf,CAAuB,CAAvB,CAL9C,CAMhB,gBAAUgC,CAAV,aAA2BC,CAA3B,CACH,CAvaI,CAyaLC,qBAzaK,gCAyaiB3H,CAzajB,CAyawB,CACzB,KAAK7G,cAAL,CAAsB6G,CACzB,CA3aI,CA6aLwF,KA7aK,gBA6aCoC,CA7aD,CA6aI,CACL,MAAiB,EAAV,EAAAA,CAAC,CAAG,CACd,CA/aI,CAibLrK,qBAjbK,gCAibiBsK,CAjbjB,CAibyB,CAC1B,MAAOA,CAAAA,CAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,GAAiCF,CAAM,CAACG,KAAP,CAAa,CAAb,CAC3C,CAnbI,CAqbLC,aArbK,wBAqbS1L,CArbT,CAqbgB,CACjB,GAAInB,CAAAA,CAAQ,CAAG,EAAf,CACA,GAAImB,CAAK,EAAI,KAAKlC,oBAAlB,CAAwC,CACpCe,CAAQ,CAACe,IAAT,CAAc,CACVd,KAAK,CAAE,KAAK1C,OAAL,CAAauP,yBADV,CAEV3M,WAAW,CAAE,KAAK5C,OAAL,CAAawP,kCAFhB,CAAd,EAIA/M,CAAQ,CAACe,IAAT,CAAc,CACVZ,WAAW,CAAE,KAAK5C,OAAL,CAAayP,kCADhB,CAAd,EAGAhN,CAAQ,CAACe,IAAT,CAAc,CACVZ,WAAW,CAAE,KAAK5C,OAAL,CAAa0P,kCADhB,CAAd,CAGH,CAXD,IAWO,IAAI9L,CAAK,EAAI,KAAKjC,mBAAlB,CAAuC,CAC1Cc,CAAQ,CAACe,IAAT,CAAc,CACVd,KAAK,CAAE,KAAK1C,OAAL,CAAa2P,wBADV,CAEV/M,WAAW,CAAE,KAAK5C,OAAL,CAAa4P,iCAFhB,CAAd,EAIAnN,CAAQ,CAACe,IAAT,CAAc,CACVZ,WAAW,CAAE,KAAK5C,OAAL,CAAa6P,iCADhB,CAAd,CAGH,CARM,IAQA,IAAIjM,CAAK,EAAI,KAAKhC,wBAAlB,CAA4C,CAC/Ca,CAAQ,CAACe,IAAT,CAAc,CACVd,KAAK,CAAE,KAAK1C,OAAL,CAAa8P,6BADV,CAEVlN,WAAW,CAAE,KAAK5C,OAAL,CAAa+P,sCAFhB,CAAd,EAIAtN,CAAQ,CAACe,IAAT,CAAc,CACVZ,WAAW,CAAE,KAAK5C,OAAL,CAAagQ,sCADhB,CAAd,EAGAvN,CAAQ,CAACe,IAAT,CAAc,CACVZ,WAAW,CAAE,KAAK5C,OAAL,CAAaiQ,sCADhB,CAAd,CAGH,CAXM,IAWA,IAAIrM,CAAK,EAAI,KAAK/B,iBAAlB,CAAqC,CACxCY,CAAQ,CAACe,IAAT,CAAc,CACVd,KAAK,CAAE,KAAK1C,OAAL,CAAakQ,sBADV,CAEVtN,WAAW,CAAE,KAAK5C,OAAL,CAAamQ,+BAFhB,CAAd,EAIA1N,CAAQ,CAACe,IAAT,CAAc,CACVZ,WAAW,CAAE,KAAK5C,OAAL,CAAaoQ,+BADhB,CAAd,EAGA3N,CAAQ,CAACe,IAAT,CAAc,CACVZ,WAAW,CAAE,KAAK5C,OAAL,CAAaqQ,+BADhB,CAAd,CAGH,CACD,KAAK7O,aAAL,CAAqBiB,CAArB,CACA,GAAI,KAAKjB,aAAL,CAAmB8O,MAAvB,CAA+B,CAC3B,KAAK/O,WAAL,IACA,KAAKoE,eAAL,CAAsB/B,CAAtB,CAA6B,QAA7B,CAAuC,mBAAvC,CAA4D,CAA5D,CACH,CACJ,CAteI,CAweL+B,eAxeK,0BAweYjG,CAxeZ,CAweuB6Q,CAxevB,CAweoCC,CAxepC,CAwe4CC,CAxe5C,CAwe6D,CAC9D,GAAI1Q,CAAAA,CAAI,CAAG,CACP2Q,MAAM,CAAG,iBADF,CAEPC,aAAa,CAAG,KAAKlP,iBAFd,CAGP/B,SAAS,CAATA,CAHO,CAIP6Q,WAAW,CAAXA,CAJO,CAKPC,MAAM,CAANA,CALO,CAMPrH,GAAG,CAAEM,MAAM,CAACmH,QAAP,CAAgBC,IANd,CAOPJ,eAAe,CAAfA,CAPO,CAQPtQ,QAAQ,CAAG,KAAKA,QART,CASPD,MAAM,CAAG,KAAKA,MATP,CAAX,CAWAnB,CAAK,CAAC,CACF+R,MAAM,CAAC,KADL,CAEF3H,GAAG,WAAKC,CAAC,CAACC,GAAF,CAAMC,OAAX,gCAFD,CAGFyH,MAAM,CAAGhR,CAHP,CAAD,CAAL,CAIGiR,IAJH,CAIQ,UAAO,CAAE,CAJjB,EAImBC,KAJnB,CAIyB,UAAO,CAAE,CAJlC,CAKH,CAzfI,CA2fLC,kBA3fK,6BA2fc7J,CA3fd,CA2fqB,CACtB,KAAK9F,WAAL,CAAmB8F,CACtB,CA7fI,CA+fL8J,YA/fK,wBA+fU,CACX,GAAIC,CAAAA,CAAW,WAAM,KAAKpR,OAAL,CAAaqR,eAAnB,aAAsC,KAAKjR,QAA3C,CAAf,CACA,MAAOgR,CAAAA,CACV,CAlgBI,CAhDK,CAAR,CAsjBb,CAEM,CAGV,CAjlBC,CAAN","sourcesContent":["define([\"local_fliplearning/vue\",\r\n        \"local_fliplearning/vuetify\",\r\n        \"local_fliplearning/axios\",\r\n        \"local_fliplearning/moment\",\r\n        \"local_fliplearning/momenttimezone\",\r\n        \"local_fliplearning/pagination\",\r\n        \"local_fliplearning/chartstatic\",\r\n        \"local_fliplearning/pageheader\",\r\n        \"local_fliplearning/modulesform\",\r\n        \"local_fliplearning/helpdialog\",\r\n    ],\r\n    function(Vue, Vuetify, Axios, Moment, MomentTimezone, Pagination, ChartStatic, PageHeader, ModulesForm, HelpDialog) {\r\n        \"use strict\";\r\n\r\n        function init(content) {\r\n            // console.logs(content);\r\n            Vue.use(Vuetify);\r\n            Vue.component('pagination', Pagination);\r\n            Vue.component('chart', ChartStatic);\r\n            Vue.component('pageheader', PageHeader);\r\n            Vue.component('modulesform', ModulesForm);\r\n            Vue.component('helpdialog', HelpDialog);\r\n            let vue = new Vue({\r\n                delimiters: [\"[[\", \"]]\"],\r\n                el: \"#student_general\",\r\n                vuetify: new Vuetify(),\r\n                data() {\r\n                    return {\r\n                        strings: content.strings,\r\n                        groups: content.groups,\r\n                        userid: content.userid,\r\n                        courseid: content.courseid,\r\n                        timezone: content.timezone,\r\n                        render_has: content.profile_render,\r\n                        loading: false,\r\n                        modules_dialog: false,\r\n                        errors: [],\r\n\r\n                        indicators: content.indicators,\r\n                        weeks_session_colors: content.weeks_session_colors,\r\n                        modules_access_colors: content.modules_access_colors,\r\n                        sessions_evolution_colors: content.sessions_evolution_colors,\r\n                        user_grades_colors: content.user_grades_colors,\r\n                        user: content.indicators.user,\r\n                        weeks_sessions: content.indicators.sessions,\r\n                        sessions_evolution_data: [],\r\n                        user_grades_categories: [],\r\n                        user_grades_data: [],\r\n                        course_grades_data: [],\r\n                        selected_sections: [],\r\n\r\n                        help_dialog: false,\r\n                        help_contents: [],\r\n\r\n                        pluginSectionName: \"student_general\",\r\n                        modules_access_chart: \"modules_access_chart\",\r\n                        weeks_session_chart: \"weeks_session_chart\",\r\n                        sessions_evolution_chart: \"sessions_evolution_chart\",\r\n                        user_grades_chart: \"user_grades_chart\",\r\n                    }\r\n                },\r\n                beforeMount() {\r\n                    this.set_modules_in_sections();\r\n                    this.calculate_sessions_evolution();\r\n                    this.calculate_user_grades()\r\n                },\r\n                mounted() {\r\n                    document.querySelector(\"#student_general_loader\").style.display = \"none\";\r\n                    document.querySelector(\"#student_general\").style.display = \"block\";\r\n                },\r\n                methods: {\r\n                    get_help_content() {\r\n                        let contents = [];\r\n                        contents.push({\r\n                            title: this.strings.section_help_title,\r\n                            description: this.strings.section_help_description,\r\n                        });\r\n                        return contents;\r\n                    },\r\n\r\n                    set_modules_in_sections() {\r\n                        let sectionsMap = new Map();\r\n                        let sectionid = 0;\r\n                        this.indicators.cms.forEach(cm => {\r\n                            sectionid = Number(cm.section);\r\n                            if (!sectionsMap.has(sectionid)) {\r\n                                sectionsMap.set(sectionid, [cm]);\r\n                            } else {\r\n                                sectionsMap.get(sectionid).push(cm);\r\n                            }\r\n                        });\r\n                        this.indicators.sections.forEach(section => {\r\n                            sectionid = Number(section.sectionid);\r\n                            section.sectionid = sectionid;\r\n                            section.modules = (sectionsMap.has(sectionid)) ? sectionsMap.get(sectionid) : [];\r\n                        });\r\n                    },\r\n\r\n                    build_modules_access_chart() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            type: 'bar',\r\n                            backgroundColor: null,\r\n                            style: { fontFamily: 'poppins' },\r\n                        };\r\n                        chart.title = { text: null };\r\n                        chart.colors = this.modules_access_colors,\r\n                        chart.xAxis = {\r\n                                type: 'category',\r\n                            };\r\n                        chart.yAxis = {\r\n                            allowDecimals: false,\r\n                            title: {\r\n                                enabled: true,\r\n                                text: this.strings.modules_amount,\r\n                            }\r\n                        };\r\n                        chart.tooltip = {\r\n                            shared: true,\r\n                            useHTML: true,\r\n                            formatter: function() {\r\n                                // let module_text = (this.y == 1) ? vue.strings.module_label : vue.strings.modules_label;\r\n                                let module_text = vue.capitalizeFirstLetter(vue.strings.modules_label);\r\n                                return '<small>' + module_text + '</small><br/>' +\r\n                                    '<b style=\"color:' + this.points[0].color + ';\">• </b>' +\r\n                                    '<b>' + this.points[0].key + '</b>: ' + this.y + '<br/>' +\r\n                                    '<small>' + vue.strings.modules_details + '</small>';\r\n                            }\r\n                        };\r\n                        chart.plotOptions = {\r\n                                series: {\r\n                                    cursor: 'pointer',\r\n                                    point: {\r\n                                        events: {\r\n                                            click: function() {\r\n                                                vue.open_modules_modal(this.x);\r\n\r\n                                                vue.saveInteraction (\r\n                                                    vue.modules_access_chart,\r\n                                                    \"viewed\",\r\n                                                    \"resources_details_dialog\",\r\n                                                    18\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                        chart.legend = {\r\n                                enabled: false\r\n                            };\r\n                        chart.series = [{\r\n                            colorByPoint: true,\r\n                            data: [\r\n                                { name: this.strings.modules_access_chart_series_viewed, y: this.user.cms.viewed },\r\n                                { name: this.strings.modules_access_chart_series_complete, y: this.user.cms.complete },\r\n                                { name: this.strings.modules_access_chart_series_total, y: this.user.cms.total }\r\n                            ]\r\n                        }];\r\n                        return chart;\r\n                    },\r\n\r\n                    build_weeks_session_chart() {\r\n                        let chart = new Object();\r\n                        chart.title = { text: null };\r\n                        chart.chart = {\r\n                            type: 'heatmap',\r\n                            backgroundColor: null,\r\n                            style: { fontFamily: 'poppins' },\r\n                        };\r\n                        chart.xAxis = {\r\n                            categories: this.strings.weeks,\r\n                        };\r\n                        chart.yAxis = {\r\n                            categories: this.weeks_sessions.categories,\r\n                            title: null,\r\n                            reversed: true,\r\n                        };\r\n                        chart.colorAxis = {\r\n                            min: 0,\r\n                            minColor: this.weeks_session_colors[0],\r\n                            maxColor: this.weeks_session_colors[1],\r\n                        };\r\n                        chart.legend = {\r\n                            layout: 'horizontal',\r\n                            verticalAlign: 'bottom',\r\n                        };\r\n                        chart.tooltip = {\r\n                            useHTML: true,\r\n                            formatter: function() {\r\n                                let days = vue.weeks_sessions.weeks[this.point.y][this.point.x] || '';\r\n                                let xCategoryName = vue.get_point_category_name(this.point, 'x');\r\n                                let yCategoryName = vue.get_point_category_name(this.point, 'y');\r\n                                let label = vue.capitalizeFirstLetter(vue.strings.sessions_text);\r\n                                return '<small>' + yCategoryName + ' ' + xCategoryName + '</small><br/>' +\r\n                                    '<b style=\"color: ' + vue.weeks_session_colors[1] + ';\">• </b>' +\r\n                                    label + ': ' + this.point.value + '<br/>' +\r\n                                    '<small>' + days + '</small>';\r\n                            }\r\n                        };\r\n                        chart.series = [{\r\n                            borderWidth: 2,\r\n                            borderColor: '#FAFAFA',\r\n                            data: this.weeks_sessions.data,\r\n                        }];\r\n                        return chart;\r\n                    },\r\n\r\n                    build_sessions_evolution_chart() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            zoomType: 'x',\r\n                            backgroundColor: null,\r\n                            style: { fontFamily: 'poppins' },\r\n                        };\r\n                        chart.title = { text: null };\r\n                        chart.colors = this.sessions_evolution_colors,\r\n                        chart.xAxis = {\r\n                                type: 'datetime'\r\n                            };\r\n                        chart.yAxis = [{\r\n                            allowDecimals: false,\r\n                            title: { text: this.strings.sessions_evolution_chart_xaxis1 }\r\n                        }, {\r\n                            title: { text: this.strings.sessions_evolution_chart_xaxis2 },\r\n                            opposite: true\r\n                        }];\r\n                        chart.tooltip = {\r\n                            shared: true,\r\n                            useHTML: true,\r\n                            formatter: function() {\r\n                                let date_label = vue.calculate_timezone_date_string(this.x);\r\n                                let text1 = (this.points[0]) ? vue.get_sessions_evolution_tooltip(this.points[0]) : '';\r\n                                let text2 = (this.points[1]) ? vue.get_sessions_evolution_tooltip(this.points[1]) : '';\r\n                                return `<small>${date_label}</small><br/>${text1}${text2}`;\r\n                            }\r\n                        };\r\n                        chart.series = this.sessions_evolution_data;\r\n                        return chart;\r\n                    },\r\n\r\n                    build_user_grades_chart() {\r\n                        let chart = new Object();\r\n                        chart.chart = {\r\n                            type: 'column',\r\n                            backgroundColor: null,\r\n                            style: { fontFamily: 'poppins' },\r\n                        };\r\n                        chart.title = { text: null };\r\n                        chart.colors = this.user_grades_colors,\r\n                        chart.xAxis = {\r\n                                crosshair: true,\r\n                                categories: this.user_grades_categories,\r\n                            };\r\n                        chart.yAxis = {\r\n                            allowDecimals: false,\r\n                            max: 100,\r\n                            labels: {\r\n                                format: '{value} %',\r\n                            },\r\n                            title: { text: this.strings.user_grades_chart_yaxis }\r\n                        };\r\n                        chart.tooltip = {\r\n                            shared: true,\r\n                            useHTML: true,\r\n                            formatter: function() {\r\n                                let itemname = this.x;\r\n                                let position = this.points[0].point.x;\r\n                                let item = vue.user.gradeitems[position];\r\n                                let header = `<small>${itemname}</small><br/>`;\r\n                                let footer = `<small>(${vue.strings.user_grades_chart_view_activity})</small><br/>`;\r\n                                let body = '';\r\n                                if (item.gradecount == 0) {\r\n                                    body = vue.strings.user_grades_chart_tooltip_no_graded;\r\n                                } else {\r\n                                    let text1 = (this.points[0]) ? vue.get_user_grades_tooltip(this.points[0], item) : '';\r\n                                    let text2 = (this.points[1]) ? vue.get_user_grades_tooltip(this.points[1], item) : '';\r\n                                    body = `${text1}${text2}${footer}`;\r\n                                }\r\n                                return `${header}${body}`;\r\n                            }\r\n                        };\r\n                        chart.plotOptions = {\r\n                            series: {\r\n                                cursor: 'pointer',\r\n                                point: {\r\n                                    events: {\r\n                                        click: function() {\r\n                                            let position = this.x;\r\n                                            let item = vue.user.gradeitems[position];\r\n                                            let url = `${M.cfg.wwwroot}/mod/${item.itemmodule}/view.php?id=${item.coursemoduleid}`;\r\n                                            window.open(url, '_blank');\r\n\r\n                                            vue.saveInteraction (\r\n                                                vue.user_grades_chart,\r\n                                                \"selected\",\r\n                                                \"grade_item\",\r\n                                                19\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        chart.series = this.user_grades_data;\r\n                        return chart;\r\n                    },\r\n\r\n                    calculate_sessions_evolution() {\r\n                        let sessions_data = [],\r\n                            time_data = [];\r\n                        let sumtime = 0,\r\n                            sumsessions = 0,\r\n                            time = 0,\r\n                            timestamp = 0;\r\n                        this.user.sessions.forEach(session => {\r\n                            timestamp = Number(session.start) * 1000;\r\n                            time = (Number(session.duration)) / 60;\r\n                            sumtime += time;\r\n                            sumsessions++;\r\n                            sessions_data.push({ x: timestamp, y: sumsessions });\r\n                            time_data.push({ x: timestamp, y: sumtime });\r\n                        });\r\n                        this.sessions_evolution_data = [\r\n                            { name: this.strings.sessions_evolution_chart_legend1, yAxis: 0, data: sessions_data },\r\n                            { name: this.strings.sessions_evolution_chart_legend2, yAxis: 1, data: time_data },\r\n                        ];\r\n                    },\r\n\r\n                    calculate_user_grades() {\r\n                        let categories = [],\r\n                            course_grades = [],\r\n                            user_grades = [];\r\n                        let user_grade = 0,\r\n                            user_name = this.user.firstname;\r\n                        if (this.user.gradeitems) {\r\n                            this.user.gradeitems.forEach(item => {\r\n                                user_grade = (Number(item.finalgrade) * 100) / Number(item.grademax);\r\n                                categories.push(item.itemname);\r\n                                course_grades.push(item.average_percentage);\r\n                                user_grades.push(user_grade);\r\n                            });\r\n                            this.user_grades_data = [\r\n                                { name: user_name, data: user_grades },\r\n                                { name: this.strings.user_grades_chart_legend, data: course_grades },\r\n                            ];\r\n                            this.user_grades_categories = categories;\r\n                        }\r\n                    },\r\n\r\n                    calculate_timezone_date_string(timestamp) {\r\n                        let dat, weekday, monthday, month, time;\r\n                        if (Moment.tz.zone(this.timezone)) {\r\n                            dat = Moment(timestamp).tz(this.timezone);\r\n                            weekday = dat.day();\r\n                            monthday = dat.date();\r\n                            month = dat.month();\r\n                            time = dat.format('HH:mm:ss');\r\n                        } else {\r\n                            let tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n                            dat = new Date(timestamp);\r\n                            weekday = dat.getDay();\r\n                            monthday = dat.getDate();\r\n                            month = dat.getMonth();\r\n                            time = `${dat.getHours()}:${dat.getMinutes()}:${dat.getSeconds()} (${tz})`;\r\n                        }\r\n                        weekday = this.strings.chart.weekdays[weekday];\r\n                        month = this.strings.chart.shortMonths[month];\r\n                        return `${weekday}, ${month} ${monthday}, ${time}`;\r\n                    },\r\n\r\n                    get_point_category_name(point, dimension) {\r\n                        let series = point.series,\r\n                            isY = dimension === 'y',\r\n                            axis = series[isY ? 'yAxis' : 'xAxis'];\r\n                        return axis.categories[point[isY ? 'y' : 'x']];\r\n                    },\r\n\r\n                    get_sessions_evolution_tooltip(point) {\r\n                        let text = '',\r\n                            sessions, sessions_prefix, time_prefix, time;\r\n                        if (point.colorIndex == 0) {\r\n                            sessions = point.y;\r\n                            sessions_prefix = point.series.name;\r\n                            text = `<b style=\"color: ${point.color};\">• </b>\r\n                                    <b>${sessions_prefix}: </b>${sessions}<br/>`;\r\n                        } else {\r\n                            time_prefix = point.series.name;\r\n                            time = this.convert_time(point.y * 60);\r\n                            text = `<b style=\"color: ${point.color};\">• </b>\r\n                                    <b>${time_prefix}: </b>\r\n                                    ${time}<br/>`;\r\n                        }\r\n                        return text;\r\n                    },\r\n\r\n                    get_user_grades_tooltip(point, item) {\r\n                        let serie_name = point.series.name,\r\n                            user_grade = 0;\r\n                        let finalgrade = Number(item.finalgrade),\r\n                            average = Number(item.average),\r\n                            grademax = Number(item.grademax);\r\n                        grademax = this.isInt(grademax) ? grademax : grademax.toFixed(2);\r\n                        if (point.colorIndex == 0) {\r\n                            user_grade = this.isInt(finalgrade) ? finalgrade : finalgrade.toFixed(2);\r\n                        } else {\r\n                            user_grade = this.isInt(average) ? average : average.toFixed(2);\r\n                        }\r\n                        return `<b style=\"color: ${point.color};\">• </b>\r\n                                <b>${serie_name}: </b>${user_grade}/${grademax}<br/>`;\r\n                    },\r\n\r\n                    open_modules_modal() {\r\n                        let sections = this.indicators.sections;\r\n                        sections.forEach(section => {\r\n                            section.modules.forEach(module => {\r\n                                module.complete = false;\r\n                                module.viewed = false;\r\n                                module.interactions = 0;\r\n                                let user_cm = this.user.cms.modules[`cm${module.id}`];\r\n                                if (user_cm) {\r\n                                    module.complete = user_cm.complete;\r\n                                    module.viewed = user_cm.viewed;\r\n                                    module.interactions = user_cm.interactions;\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        this.modules_dialog = true;\r\n                        this.selected_sections = sections;\r\n                    },\r\n\r\n                    get_picture_url(userid) {\r\n                        return `${M.cfg.wwwroot}/user/pix.php?file=/${userid}/f1.jpg`;\r\n                    },\r\n\r\n                    get_user_fullname() {\r\n                        return `${this.user.firstname} ${this.user.lastname}`;\r\n                    },\r\n\r\n                    get_username() {\r\n                        return `@${this.user.username}`;\r\n                    },\r\n\r\n                    see_profile() {\r\n                        let id = this.user.id;\r\n                        let url = M.cfg.wwwroot + '/user/view.php?id=' + id + '&course=' + vue.courseid;\r\n                        window.open(url);\r\n                    },\r\n\r\n                    get_progress_percentage() {\r\n                        return `${this.user.progress_percentage} %`;\r\n                    },\r\n\r\n                    get_progress_message() {\r\n                        let finished_label = this.strings.finished_resources;\r\n                        return `${finished_label}: ${this.user.cms.complete} ${this.strings.of_conector} ${this.user.cms.total}`;\r\n                    },\r\n\r\n                    convert_time(time) {\r\n                        time *= 60; // pasar los minutos a segundos\r\n                        let h = this.strings.hours_short;\r\n                        let m = this.strings.minutes_short;\r\n                        let s = this.strings.seconds_short;\r\n                        let hours = Math.floor(time / 3600);\r\n                        let minutes = Math.floor((time % 3600) / 60);\r\n                        let seconds = Math.floor(time % 60);\r\n                        let text;\r\n                        if (hours >= 1) {\r\n                            if (minutes >= 1) {\r\n                                text = `${hours}${h} ${minutes}${m}`;\r\n                            } else {\r\n                                text = `${hours}${h}`;\r\n                            }\r\n                        } else if ((minutes >= 1)) {\r\n                            if (seconds >= 1) {\r\n                                text = `${minutes}${m} ${seconds}${s}`;\r\n                            } else {\r\n                                text = `${minutes}${m}`;\r\n                            }\r\n                        } else {\r\n                            text = `${seconds}${s}`;\r\n                        }\r\n                        return text;\r\n                    },\r\n\r\n                    get_student_grade() {\r\n                        let grade = this.user.coursegrade;\r\n                        grade.finalgrade = Number(grade.finalgrade);\r\n                        grade.maxgrade = Number(grade.maxgrade);\r\n                        let student_grade = this.isInt(grade.finalgrade) ? grade.finalgrade : grade.finalgrade.toFixed(2);\r\n                        let max_grade = this.isInt(grade.maxgrade) ? grade.maxgrade : grade.maxgrade.toFixed(2);\r\n                        return `${student_grade}/${max_grade}`;\r\n                    },\r\n\r\n                    update_modules_dialog(value) {\r\n                        this.modules_dialog = value;\r\n                    },\r\n\r\n                    isInt(n) {\r\n                        return n % 1 === 0;\r\n                    },\r\n\r\n                    capitalizeFirstLetter(string) {\r\n                        return string.charAt(0).toUpperCase() + string.slice(1);\r\n                    },\r\n\r\n                    openChartHelp(chart) {\r\n                        let contents = [];\r\n                        if (chart == this.modules_access_chart) {\r\n                            contents.push({\r\n                                title: this.strings.modules_access_help_title,\r\n                                description: this.strings.modules_access_help_description_p1,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.modules_access_help_description_p2,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.modules_access_help_description_p3,\r\n                            });\r\n                        } else if (chart == this.weeks_session_chart) {\r\n                            contents.push({\r\n                                title: this.strings.weeks_session_help_title,\r\n                                description: this.strings.weeks_session_help_description_p1,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.weeks_session_help_description_p2,\r\n                            });\r\n                        } else if (chart == this.sessions_evolution_chart) {\r\n                            contents.push({\r\n                                title: this.strings.sessions_evolution_help_title,\r\n                                description: this.strings.sessions_evolution_help_description_p1,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.sessions_evolution_help_description_p2,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.sessions_evolution_help_description_p3,\r\n                            });\r\n                        } else if (chart == this.user_grades_chart) {\r\n                            contents.push({\r\n                                title: this.strings.user_grades_help_title,\r\n                                description: this.strings.user_grades_help_description_p1,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.user_grades_help_description_p2,\r\n                            });\r\n                            contents.push({\r\n                                description: this.strings.user_grades_help_description_p3,\r\n                            });\r\n                        }\r\n                        this.help_contents = contents;\r\n                        if (this.help_contents.length) {\r\n                            this.help_dialog = true;\r\n                            this.saveInteraction (chart, \"viewed\", \"chart_help_dialog\", 7);\r\n                        }\r\n                    },\r\n\r\n                    saveInteraction (component, interaction, target, interactiontype) {\r\n                        let data = {\r\n                            action : \"saveinteraction\",\r\n                            pluginsection : this.pluginSectionName,\r\n                            component,\r\n                            interaction,\r\n                            target,\r\n                            url: window.location.href,\r\n                            interactiontype,\r\n                            courseid : this.courseid,\r\n                            userid : this.userid,\r\n                        };\r\n                        Axios({\r\n                            method:'get',\r\n                            url: `${M.cfg.wwwroot}/local/fliplearning/ajax.php`,\r\n                            params : data,\r\n                        }).then((r) => {}).catch((e) => {});\r\n                    },\r\n\r\n                    update_help_dialog(value) {\r\n                        this.help_dialog = value;\r\n                    },\r\n\r\n                    get_timezone() {\r\n                        let information = `${this.strings.change_timezone} ${this.timezone}`\r\n                        return information;\r\n                    },\r\n\r\n                }\r\n            })\r\n        }\r\n\r\n        return {\r\n            init: init\r\n        };\r\n    });"],"file":"student.min.js"}